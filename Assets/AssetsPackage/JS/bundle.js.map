{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/GameMain.ts","webpack:///./src/UnitTest/ExtensionDeclTest.ts","webpack:///./src/UnitTest/MainTest.ts","webpack:///./src/UnitTest/TsQuickStart.ts","webpack:///./src/framework/UnityTs.ts","webpack:///./src/framework/module/BaseModule.ts","webpack:///./src/framework/module/ModuleCenter.ts","webpack:///./src/framework/resource/GameObjectPool.ts","webpack:///./src/framework/resource/ResourceManager.ts","webpack:///./src/framework/scene/SceneManager.ts","webpack:///./src/framework/scene/base/BaseScene.ts","webpack:///./src/framework/ui/UIManager.ts","webpack:///./src/framework/ui/UIWindow.ts","webpack:///./src/framework/ui/base/UIBaseCtrl.ts","webpack:///./src/framework/ui/base/UIBaseModel.ts","webpack:///./src/framework/ui/base/UIBaseView.ts","webpack:///./src/framework/ui/component/UIBaseComponent.ts","webpack:///./src/framework/ui/component/UIBaseContainer.ts","webpack:///./src/framework/ui/component/UICanvas.ts","webpack:///./src/framework/ui/component/UIImage.ts","webpack:///./src/framework/ui/component/UILayer.ts","webpack:///./src/framework/ui/component/UIText.ts","webpack:///./src/framework/ui/config/EUIAction.ts","webpack:///./src/framework/ui/config/EUIType.ts","webpack:///./src/framework/ui/config/UIConfigs.ts","webpack:///./src/framework/ui/config/UILayers.ts","webpack:///./src/framework/ui/config/UIMessageNames.ts","webpack:///./src/framework/ui/config/UIWindowNames.ts","webpack:///./src/framework/ui/util/UIUtil.ts","webpack:///./src/framework/unity/UnityTagsAndLayers.ts","webpack:///./src/framework/utils/EventDispatcher.ts","webpack:///./src/framework/utils/Handler.ts","webpack:///./src/framework/utils/StringUtil.ts","webpack:///./src/framework/utils/timer/CallLater.ts","webpack:///./src/framework/utils/timer/Timer.ts","webpack:///./src/game/language/LanguageEvents.ts","webpack:///./src/game/language/LanguageManager.ts","webpack:///./src/game/module/home/HomeModule.ts","webpack:///./src/game/scenes/config/SceneConfig.ts","webpack:///./src/game/scenes/home/HomeScene.ts","webpack:///./src/game/ui/uiBattle/UIBattleConfig.ts","webpack:///./src/game/ui/uiBattle/uiBattle/UIBattleCtrl.ts","webpack:///./src/game/ui/uiBattle/uiBattle/UIBattleModel.ts","webpack:///./src/game/ui/uiBattle/uiBattle/UIBattleView.ts","webpack:///./src/game/ui/uiHome/UIHomeConfig.ts","webpack:///./src/game/ui/uiHome/uiHome/UIHomeCtrl.ts","webpack:///./src/game/ui/uiHome/uiHome/UIHomeModel.ts","webpack:///./src/game/ui/uiHome/uiHome/UIHomeView.ts","webpack:///./src/game/ui/uiLoading/UILoadingConfig.ts","webpack:///./src/game/ui/uiLoading/uiLoading/UILoadingCtrl.ts","webpack:///./src/game/ui/uiLoading/uiLoading/UILoadingModel.ts","webpack:///./src/game/ui/uiLoading/uiLoading/UILoadingView.ts","webpack:///external \"csharp\"","webpack:///external \"puerts\""],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/GameMain.ts\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","//部署:npm run build\r\n\r\nimport {UnityEngine} from 'csharp'\r\nimport { SceneManager } from './framework/scene/SceneManager';\r\nimport { SceneConfigs } from './game/scenes/config/SceneConfig';\r\nimport UnityTs from './framework/UnityTs';\r\nimport { MainTest } from './UnitTest/MainTest';\r\n\r\n/**\r\n * 游戏入口\r\n * @author by passion\r\n **/\r\n class GameMain {\r\n    constructor() {\r\n        console.log(\"JavaScript start running!!\");\r\n        //初始化框架\r\n        UnityTs.init()\r\n        this.StartGame().then(() => {\r\n            console.log(\"game start!!\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 游戏启动\r\n     * @constructor\r\n     */\r\n    async StartGame() {\r\n        //启动游戏\r\n        SceneManager.Instance.switchScene(SceneConfigs.HomeScene)\r\n        MainTest.Run();\r\n    }\r\n}\r\n\r\nnew GameMain();","import {$extension} from 'puerts'\r\nimport {PuertsTest} from 'csharp'\r\n\r\n//要手动声明一下，否则通过obj.func引用扩展方法会失败\r\n$extension(PuertsTest.BaseClass, PuertsTest.BaseClassExtension);\r\n","import { AlgorithmTest } from \"./AlgorithmTest\";\r\nimport { ContrastLuaTest } from \"./ContrastLuaTest\";\r\nimport './TsQuickStart'\r\n\r\nexport class MainTest {\r\n    /**\r\n     * 运行ts-cs用例，单纯的ts测试写到.test.ts里面\r\n     * @constructor\r\n     */\r\n    static Run(){\r\n        // AlgorithmTest.Run()\r\n        // ContrastLuaTest.Run()\r\n    }\r\n}","//部署:npm run build\r\n\r\nimport {UnityEngine, PuertsTest, System} from 'csharp'\r\nimport {$ref, $unref, $generic, $promise, $typeof} from 'puerts'\r\nimport './ExtensionDeclTest'\r\n\r\n//静态函数\r\nUnityEngine.Debug.Log('hello world');\r\n\r\n//对象构造\r\nlet obj = new PuertsTest.DerivedClass();\r\n\r\n//实例成员访问\r\nobj.BMFunc();//父类方法\r\nobj.DMFunc(PuertsTest.MyEnum.E1);//子类方法\r\nconsole.log(obj.BMF, obj.DMF);\r\nobj.BMF = 10;//父类属性\r\nobj.DMF = 30;//子类属性\r\nconsole.log(obj.BMF, obj.DMF);\r\n\r\n//静态成员\r\nconsole.log(PuertsTest.BaseClass.BSF, PuertsTest.DerivedClass.DSF, PuertsTest.DerivedClass.BSF);\r\n\r\n//委托，事件\r\n//如果你后续不需要-=，可以像这样直接传函数当delegate\r\nobj.MyCallback = msg => console.log(\"do not need remove, msg=\" + msg);\r\n//通过new构建的delegate，后续可以拿这个引用去-=\r\nlet delegate = new PuertsTest.MyCallback(msg => console.log('can be removed, msg=' + msg));\r\n//由于ts不支持操作符重载，Delegate.Combine相当于C#里头的obj.myCallback += delegate;\r\nobj.MyCallback = System.Delegate.Combine(obj.MyCallback, delegate) as PuertsTest.MyCallback;\r\nobj.Trigger();\r\n//Delegate.Remove相当于C#里头的obj.myCallback -= delegate;\r\nobj.MyCallback = System.Delegate.Remove(obj.MyCallback, delegate) as PuertsTest.MyCallback;\r\nobj.Trigger();\r\n//事件\r\nobj.add_MyEvent(delegate);\r\nobj.Trigger();\r\nobj.remove_MyEvent(delegate);\r\nobj.Trigger();\r\n//静态事件\r\nPuertsTest.DerivedClass.add_MyStaticEvent(delegate);\r\nobj.Trigger();\r\nPuertsTest.DerivedClass.remove_MyStaticEvent(delegate);\r\nobj.Trigger();\r\n\r\n//可变参数\r\nobj.ParamsFunc(1024, 'haha', 'hehe', 'heihei');\r\n\r\n//in out 参数\r\nlet p1 = $ref(1);\r\nlet p2 = $ref(10);\r\nlet ret = obj.InOutArgFunc(100, p1, p2);\r\nconsole.log('ret=' + ret + ', out=' + $unref(p1) + ', ref='+ $unref(p2));\r\n\r\n//泛型\r\n//先通过$generic实例化泛型参数\r\nlet List = $generic(System.Collections.Generic.List$1, System.Int32);//$generic调用性能不会太好，同样泛型参数建议整个工程，至少一个文件内只做一次\r\nlet Dictionary = $generic(System.Collections.Generic.Dictionary$2, System.String, List);\r\n\r\nlet lst = new List<number>();\r\nlst.Add(1);\r\nlst.Add(0);\r\nlst.Add(2);\r\nlst.Add(4);\r\nobj.PrintList(lst);\r\nlet dic = new Dictionary<string, System.Collections.Generic.List$1<number>>();\r\ndic.Add(\"aaa\", lst)\r\nobj.PrintList(dic.get_Item(\"aaa\"));\r\n\r\n//arraybuffer\r\nlet ab  = obj.GetAb(5);\r\nlet u8a0 = new Uint8Array(ab);\r\nconsole.log(obj.SumOfAb(u8a0));\r\nlet u8a1 = new Uint8Array(2);\r\nu8a1[0] = 123;\r\nu8a1[1] = 101;\r\nconsole.log(obj.SumOfAb(u8a1));\r\n\r\n//引擎api\r\nlet go = new UnityEngine.GameObject(\"testObject\");\r\ngo.AddComponent($typeof(UnityEngine.ParticleSystem));\r\ngo.transform.position = new UnityEngine.Vector3(7, 8,  9);\r\n\r\n//extension methods\r\nobj.PlainExtension();\r\nobj.Extension1();\r\nobj.Extension2(go);\r\nlet obj1 = new PuertsTest.BaseClass1();\r\nobj.Extension2(obj1);\r\n\r\n\r\n//typescript和c#的async，await联动，为了不在低版本的Unity下报错，先注释，c#7.3以上版本可以打开这些注释\r\n/*async function asyncCall() {\r\n    let task = obj.GetFileLength(\"Assets/Examples/05_Typescript/TsQuickStart.cs\");\r\n    let result = await $promise(task);\r\n    console.log('file length is ' + result);\r\n    let task2 = obj.GetFileLength(\"notexistedfile\");//这个会抛文件找不到异常，被catch\r\n    let result2 = await $promise(task2);\r\n    console.log('file length is ,' + result2);\r\n}\r\nasyncCall().catch(e => console.error(\"catch:\" + e));*/\r\n","/* 全局类入口*/\r\n\r\nimport {Timer} from \"./utils/timer/Timer\";\r\nimport {GameObjectPool} from './resource/GameObjectPool';\r\nimport UIManager from \"./ui/UIManager\";\r\nimport {SceneManager} from \"./scene/SceneManager\";\r\nimport {ModuleCenter} from \"./module/ModuleCenter\";\r\nimport {ResourceManager} from \"./resource/ResourceManager\";\r\nimport {LanguageManager} from \"../game/language/LanguageManager\";\r\n\r\nclass Utils {\r\n    /*id*/\r\n    static _gid: number = 1;\r\n    static _pi: number = 180 / Math.PI;\r\n    static _pi2: number = Math.PI / 180;\r\n    static _extReg: RegExp = /\\.(\\w+)\\??/g;\r\n\r\n    /*\r\n    * 角度转弧度\r\n    * */\r\n    public static toRadian(angle: number): number {\r\n        return angle * Utils._pi2;\r\n    }\r\n\r\n    /* \r\n    * 弧度转角度\r\n    * */\r\n    public static toAngle(radian: number): number {\r\n        return radian * Utils._pi;\r\n    }\r\n\r\n    /*\r\n    * 获取唯一id\r\n    * */\r\n    public static getGID(): number {\r\n        return Utils._gid++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>连接数组。和array的concat相比，此方法不创建新对象</p>\r\n     * <b>注意：</b>若 参数 a 不为空，则会改变参数 source 的值为连接后的数组。\r\n     * @param    source 待连接的数组目标对象。\r\n     * @param    array 待连接的数组对象。\r\n     * @return 连接后的数组。\r\n     */\r\n    public static concatArray(source: any[], array: any[]): any[] {\r\n        if (!array) return source;\r\n        if (!source) return array;\r\n        let i: number, len: number = array.length;\r\n        for (i = 0; i < len; i++) {\r\n            source.push(array[i]);\r\n        }\r\n        return source;\r\n    }\r\n}\r\n\r\n/**\r\n * 全局初始化入口\r\n * @author by passion \r\n * @create time 2021/6/9 11:38\r\n**/\r\nexport default class UnityTs {\r\n    /* 工具类*/\r\n    static utils: typeof Utils = Utils;\r\n\r\n    static init() {\r\n        Timer.init();\r\n        ResourceManager.Instance.initialize();\r\n        GameObjectPool.Instance.initialize();\r\n        UIManager.Instance.initialize();\r\n        SceneManager.Instance.initialize();\r\n        ModuleCenter.Instance.initialize();\r\n        LanguageManager.Instance.initialize();\r\n    }\r\n}\r\n","import {IModule} from \"../interface/IModule\";\r\nimport EventDispatcher from \"../utils/EventDispatcher\";\r\n\r\n/**\r\n * 模块基类\r\n * @author by passion \r\n * @create time 2021/6/9 11:38\r\n**/\r\nexport class BaseModule extends EventDispatcher implements IModule {\r\n    /**\r\n     * 是否可更新\r\n     * 默认模块不可更新，如果存在模块需要被更新，设置可更新\r\n     */\r\n    protected _updatable:boolean = false;\r\n    \r\n    public onAdd(): void {\r\n        this.onAddListener();\r\n    }\r\n\r\n    public onRemove(): void {\r\n        this.onRemoveListener();\r\n    }\r\n\r\n    public onAddListener(): void {\r\n\r\n    }\r\n\r\n    public onRemoveListener(): void {\r\n        \r\n    }\r\n    \r\n    public setUpdatable(value: boolean): void {\r\n        \r\n    }\r\n\r\n    /**\r\n     * 获取是否可更新\r\n     */\r\n    public getUpdatable(): boolean {\r\n        return this._updatable;\r\n    }\r\n\r\n    public onUpdate(): void {\r\n        console.error(\"please override BaseModule::update function\");\r\n    }\r\n}\r\n\r\n/**\r\n * 类型构造器\r\n */\r\nexport interface IBaseModuleCtor {\r\n    new():IModule;\r\n}","import {ISingleton} from \"../interface/ISingleton\";\r\nimport {BaseModule, IBaseModuleCtor} from \"./BaseModule\";\r\nimport {IModule} from \"../interface/IModule\";\r\nimport {Timer} from \"../utils/timer/Timer\";\r\n\r\n/**\r\n * 模块中心\r\n * @author by passion \r\n * @create time 2021/6/9 11:39\r\n**/\r\nexport class ModuleCenter implements ISingleton {\r\n    //实例\r\n    public static Instance: ModuleCenter = new ModuleCenter();\r\n    /**\r\n     * 模块map\r\n     */\r\n    private _moduleMap: Map<IBaseModuleCtor, BaseModule>;\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public initialize(): void {\r\n        this._moduleMap = new Map<IBaseModuleCtor, BaseModule>();\r\n        Timer.timer.frameLoop(1, this, this._update, null, true);\r\n    }\r\n\r\n    /**\r\n     * 添加模块\r\n     * @param moduleClass\r\n     */\r\n    public add(moduleClass: IBaseModuleCtor): IModule {\r\n        if (this._moduleMap.has(moduleClass)) {\r\n            console.error(\"Cannot add modules repeatedly,module name:\" + moduleClass.name);\r\n            return;\r\n        }\r\n        let inst = new moduleClass() as BaseModule;\r\n        this._moduleMap.set(moduleClass, inst);\r\n        inst.onAdd();\r\n        return inst;\r\n    }\r\n\r\n    /**\r\n     * 移除模块\r\n     * @param moduleClass\r\n     */\r\n    public remove(moduleClass: IBaseModuleCtor): boolean {\r\n        if (!this._moduleMap.has(moduleClass)) {\r\n            return false;\r\n        }\r\n        let module: IModule = this._moduleMap.get(moduleClass);\r\n        module.onRemove();\r\n        this._moduleMap.delete(moduleClass);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取模块实例\r\n     * @param moduleClass\r\n     */\r\n    public get(moduleClass: IBaseModuleCtor): BaseModule {\r\n        return this._moduleMap.get(moduleClass);\r\n    }\r\n\r\n    //----------------private------------------\r\n\r\n    /**\r\n     * 更新\r\n     * @private\r\n     */\r\n    private _update() {\r\n        this._moduleMap.forEach((module, _) => {\r\n            module && module.getUpdatable() && module.onUpdate();\r\n        });\r\n    }\r\n}","import {System, UnityEngine} from \"csharp\";\r\nimport {ISingleton} from '../interface/ISingleton';\r\nimport {string} from \"../utils/StringUtil\";\r\nimport {ResourceManager} from \"./ResourceManager\";\r\nimport {$typeof} from \"puerts\";\r\nimport Handler from \"../utils/Handler\";\r\n\r\n/*\r\n* GameObject资源池\r\n* */\r\nexport class GameObjectPool implements ISingleton {\r\n    public static Instance: GameObjectPool = new GameObjectPool();\r\n\r\n    private _cacheTransRoot = null;\r\n    private _goPool: Map<string, UnityEngine.GameObject> = new Map<string, UnityEngine.GameObject>();\r\n    private _instCache: Map<string, Array<any>> = new Map<string, Array<any>>();\r\n    private _typeGameObject: System.Type;\r\n\r\n    /**\r\n     * 密封构造函数\r\n     */\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * 从缓存获取对象\r\n     * @param path\r\n     */\r\n    private tryGetFromCache(path: string): UnityEngine.GameObject {\r\n        if (!this.checkHasCached(path)) {\r\n            return null;\r\n        }\r\n        let cachedInst: Array<any> = this._instCache.get(path);\r\n        if (cachedInst != null && cachedInst.length > 0) {\r\n            return cachedInst.pop();\r\n        }\r\n        let pooledGo = this._goPool.get(path);\r\n        if (pooledGo != null) {\r\n            return UnityEngine.GameObject.Instantiate(pooledGo) as UnityEngine.GameObject;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 启用gameObject\r\n     * @param gameObject\r\n     */\r\n    private activeGO(gameObject: UnityEngine.GameObject) {\r\n        gameObject && gameObject.SetActive(true);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param path\r\n     * @returns bool\r\n     */\r\n    private checkHasCached(path: string): boolean {\r\n        let cachedInst: Array<any> = this._instCache.get(path);\r\n        if (cachedInst && cachedInst.length > 0) {\r\n            return true;\r\n        }\r\n        let pooledGo = this._goPool.get(path);\r\n        return pooledGo != null;\r\n    }\r\n\r\n    /**\r\n     * 缓存并实例化GameObject\r\n     * @param path\r\n     * @param go\r\n     * @param inst_count\r\n     */\r\n    private cacheAndInstGameObject(path: string, go: any, inst_count: number = 1) {\r\n        this._goPool.set(path, go);\r\n        if (inst_count > 0) {\r\n            let cachedInst: Array<any> = this._instCache.get(path) || [];\r\n            for (let i: number = 0; i < inst_count; i++) {\r\n                let inst = UnityEngine.GameObject.Instantiate(go) as UnityEngine.GameObject;\r\n                inst.transform.SetParent(this._cacheTransRoot);\r\n                inst.SetActive(false);\r\n                cachedInst.push(inst);\r\n            }\r\n            this._instCache.set(path, cachedInst);\r\n        }\r\n    }\r\n\r\n    //----------------------------------public function ------------------------\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public initialize(): void {\r\n        let go = UnityEngine.GameObject.Find(\"GameObjectCacheRoot\");\r\n        if (go == (void 0)) {\r\n            go = new UnityEngine.GameObject(\"GameObjectCacheRoot\");\r\n            UnityEngine.Object.DontDestroyOnLoad(go);\r\n        }\r\n        this._cacheTransRoot = go.transform;\r\n        this._typeGameObject = $typeof(UnityEngine.GameObject);\r\n    }\r\n\r\n    /**\r\n     * 预加载资源，回调里面不返回加载的资源\r\n     * @param pathArray\r\n     * @param callback\r\n     * @param instCount\r\n     */\r\n    public preLoadGameObjectAsync(pathArray: Array<string>, callback: Handler, instCount: number = 1) {\r\n        let len: number = pathArray.length;\r\n        let loadCount = len;\r\n        for (let i = 0; i < len; i++) {\r\n            let path = pathArray[i];\r\n            ResourceManager.Instance.loadAssetAsync(path, this._typeGameObject, Handler.create(this, (p: string, gameObject) => {\r\n                if (gameObject != null) {\r\n                    this.cacheAndInstGameObject(p, gameObject, instCount)\r\n                }\r\n                if (--loadCount <= 0) {\r\n                    callback && callback.run();\r\n                }\r\n            }, [path], true));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 异步加载GameObject，会把加载好的GameObject传给回调\r\n     * @param path\r\n     * @param callback\r\n     */\r\n    public loadGameObjectAsync(path: string, callback: Handler) {\r\n        let inst = this.tryGetFromCache(path);\r\n        if (inst != null) {\r\n            this.activeGO(inst);\r\n            return\r\n        }\r\n        this.preLoadGameObjectAsync([path], Handler.create(this, () => {\r\n            let inst = this.tryGetFromCache(path);\r\n            this.activeGO(inst);\r\n            callback && callback.runWith(inst);\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * 获取已经加载好的GameObject对象\r\n     * @param path\r\n     * @param active\r\n     */\r\n    public getLoadedGameObject(path: string, active: boolean = true): UnityEngine.GameObject {\r\n        let inst = this.tryGetFromCache(path) as UnityEngine.GameObject;\r\n        if (inst == null) {\r\n            console.error(`GameObjectPool=>getLoadedGameObject which is not loaded:${path}`);\r\n        }\r\n        active && this.activeGO(inst);\r\n        return inst;\r\n    }\r\n\r\n    /**\r\n     * 回收GameObject\r\n     * @param path\r\n     * @param inst\r\n     * @returns\r\n     */\r\n    public recycleGameObject(path: string, inst: UnityEngine.GameObject) {\r\n        if (inst == null || string.IsNullOrEmpty(path)) {\r\n            console.error(\"GameObjectPool::recycleGameObject params error,path or game object inst is null or empty\");\r\n            return;\r\n        }\r\n        inst.transform.SetParent(this._cacheTransRoot);\r\n        inst.SetActive(false);\r\n        let cachedInst = this._instCache.get(path) || [];\r\n        cachedInst.push(inst);\r\n        this._instCache.set(path, cachedInst);\r\n    }\r\n\r\n    /**\r\n     * 清理\r\n     */\r\n    public cleanup() {\r\n        this._instCache.forEach((arr: Array<UnityEngine.GameObject>, path: string) => {\r\n            if (arr.length) {\r\n                let len = arr.length;\r\n                for (let i = 0; i < len; i++) {\r\n                    let go = arr[i];\r\n                    if (go != null) {\r\n                        UnityEngine.GameObject.Destroy(go);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._instCache.clear();\r\n        this._goPool.clear();\r\n    }\r\n}","import {ISingleton} from \"../interface/ISingleton\";\r\nimport {AssetBundles, System, UnityEngine} from \"csharp\";\r\nimport Handler from \"../utils/Handler\";\r\nimport {Timer} from \"../utils/timer/Timer\";\r\nimport {string} from \"../utils/StringUtil\";\r\nimport {$typeof} from \"puerts\";\r\nimport {IAtlasConfig} from \"./config/AtlasConfig\";\r\n\r\nexport class ResourceManager implements ISingleton {\r\n    public static Instance: ResourceManager = new ResourceManager();\r\n    //cs侧资源接口\r\n    private _api: AssetBundles.AssetBundleManager;\r\n    private _requestAssetsHandler: Map<AssetBundles.BaseAssetAsyncLoader, Handler>;\r\n    private _requestABHandler: Map<AssetBundles.BaseAssetBundleAsyncLoader, Handler>;\r\n    //sprite类型\r\n    private _spriteType: System.Type;\r\n\r\n    private constructor() {\r\n    }\r\n\r\n    private onUpdate() {\r\n        if (this._requestAssetsHandler.size > 0) {\r\n            this._requestAssetsHandler.forEach((handler, loader) => {\r\n                if (loader.isDone) {\r\n                    handler && handler.runWith(loader.asset);\r\n                    loader.Dispose();\r\n                    this._requestAssetsHandler.delete(loader);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this._requestABHandler.size > 0) {\r\n            this._requestABHandler.forEach((handler, loader) => {\r\n                if (loader.isDone) {\r\n                    handler && handler.runWith(true);\r\n                    loader.Dispose();\r\n                    this._requestABHandler.delete(loader);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public initialize(): void {\r\n        this._spriteType = $typeof(UnityEngine.Sprite);\r\n        this._api = AssetBundles.AssetBundleManager.Instance;\r\n        this._requestAssetsHandler = new Map<AssetBundles.BaseAssetAsyncLoader, Handler>();\r\n        this._requestABHandler = new Map<AssetBundles.BaseAssetBundleAsyncLoader, Handler>();\r\n        Timer.timer.frameLoop(2, this, this.onUpdate, null, true);\r\n    }\r\n\r\n    /**\r\n     * 异步加载资源\r\n     * @param path\r\n     * @param res_type\r\n     * @param callback\r\n     */\r\n    public loadAssetAsync(path: string, res_type: System.Type, callback: Handler): boolean {\r\n        if (string.IsNullOrEmpty(path)) {\r\n            console.error(\"ResourceManager::loadAssetAsync params error,path is empty\");\r\n            return false;\r\n        }\r\n        let request = this._api.LoadAssetAsync(path, res_type);\r\n        this._requestAssetsHandler.set(request, callback);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 协程方式加载资源\r\n     * @param path\r\n     * @param res_type\r\n     */\r\n    public async loadAssetAwait(path: string, res_type: System.Type) {\r\n        let request = await this._api.LoadAssetAsync(path, res_type);\r\n        let asset = request.asset;\r\n        request.Dispose();\r\n        return asset;\r\n    }\r\n\r\n    /**\r\n     * 异步加载AB包\r\n     * @param path\r\n     * @param callBack\r\n     */\r\n    public loadAssetBundleAsync(path: string, callBack: Handler) {\r\n        if (string.IsNullOrEmpty(path)) {\r\n            console.error(\"ResourceManager::loadAssetBundleAsync params error,path is empty\");\r\n            return;\r\n        }\r\n        let request = this._api.LoadAssetBundleAsync(path);\r\n        this._requestABHandler.set(request, callBack);\r\n        return true;\r\n    }\r\n\r\n    public cleanup() {\r\n        this._api.ClearAssetsCache();\r\n        this._api.UnloadAllUnusedResidentAssetBundles();\r\n    }\r\n\r\n    /**\r\n     * 等待正在加载中的完成\r\n     */\r\n    async waitProcessRunningOver() {\r\n        return new Promise<void>(resolve => {\r\n            let caller = {};\r\n            Timer.timer.frameLoop(1, caller, () => {\r\n                if (!this._api.IsProsessRunning) {\r\n                    Timer.timer.clearAll(caller);\r\n                    resolve();\r\n                }\r\n            }, null, true);\r\n        });\r\n    }\r\n\r\n    //-------------其他类型加载--------------------------\r\n\r\n    /**\r\n     * 协程方式加载图片\r\n     * @param spriteName\r\n     * @param atlas\r\n     * @constructor\r\n     */\r\n    public async loadImageAwait(spriteName: string, atlas: IAtlasConfig) {\r\n        let path = atlas.atlasPath + spriteName;\r\n        let request = await this._api.LoadAssetAsync(path, this._spriteType);\r\n        let sprite = request.asset;\r\n        request.Dispose();\r\n        return sprite;\r\n    }\r\n\r\n    /**\r\n     * 异步加载图片\r\n     * @param spriteName\r\n     * @param atlas\r\n     * @param callback\r\n     */\r\n    public loadImageAsync(spriteName: string, atlas: IAtlasConfig, callback: Handler) {\r\n        let path = atlas.atlasPath + spriteName;\r\n        this.loadAssetAsync(path, this._spriteType, callback);\r\n    }\r\n}","import {ISingleton} from \"../interface/ISingleton\";\r\nimport {BaseScene} from \"./base/BaseScene\";\r\nimport UIManager from \"../ui/UIManager\";\r\nimport IDestroyable from \"../interface/IDestroyable\";\r\nimport {Timer} from \"../utils/timer/Timer\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {SceneConfig, SceneConfigs} from \"../../game/scenes/config/SceneConfig\";\r\nimport {ResourceManager} from \"../resource/ResourceManager\";\r\nimport {IUILoadingModel} from \"../../game/ui/uiLoading/IUILoading\";\r\nimport {EUILayer} from \"../ui/config/UILayers\";\r\nimport {GameObjectPool} from \"../resource/GameObjectPool\";\r\n\r\nexport class SceneManager implements ISingleton, IDestroyable {\r\n    /**\r\n     * 实例\r\n     */\r\n    public static Instance: SceneManager = new SceneManager();\r\n    /**\r\n     * 当前场景\r\n     */\r\n    private _currentScene: BaseScene;\r\n    /**\r\n     * 是否加载中\r\n     */\r\n    private _busing: boolean;\r\n    /**\r\n     * 场景map\r\n     */\r\n    private _sceneMap: Map<string, BaseScene>;\r\n\r\n    private constructor() {\r\n    }\r\n\r\n    public initialize(): void {\r\n        this._sceneMap = new Map<string, BaseScene>();\r\n        this._busing = false;\r\n        this._currentScene = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this._currentScene = null;\r\n        if (this._sceneMap) {\r\n            this._sceneMap.forEach((scene, name) => {\r\n                scene && scene.destroy();\r\n            });\r\n            this._sceneMap = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 切换场景\r\n     * @param sceneConfig\r\n     */\r\n    public switchScene(sceneConfig) {\r\n        if (this._busing) {\r\n            return;\r\n        }\r\n        if (this._currentScene && this._currentScene.config == sceneConfig) {\r\n            return;\r\n        }\r\n        this._busing = true;\r\n        this._innerSwitchScene(sceneConfig).then(() => {\r\n            this._busing = false;\r\n            console.log(\"switch scene complete!!\")\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 等待一帧\r\n     * @private\r\n     */\r\n    async _waitFrame() {\r\n        return Timer.timer.waitFrame(1);\r\n    }\r\n\r\n    //切换场景\r\n    async _innerSwitchScene(config: SceneConfig) {\r\n        UIManager.Instance.openWindow(config.Loading);\r\n        let window = UIManager.Instance.getWindow(config.Loading);\r\n        let model: IUILoadingModel = window.model as any as IUILoadingModel;\r\n        model.setValue(0);\r\n        await this._waitFrame();\r\n        await ResourceManager.Instance.waitProcessRunningOver();\r\n        //清理旧场景\r\n        this._currentScene && this._currentScene.OnLeave();\r\n        model.setValue(model.getValue() + 0.01);\r\n        await this._waitFrame();\r\n        //清理ui\r\n        UIManager.Instance.destroyWindowExceptLayer(EUILayer.TopLayer);\r\n        model.setValue(model.getValue() + 0.01);\r\n        await this._waitFrame();\r\n        //清理资源缓存\r\n        GameObjectPool.Instance.cleanup();\r\n        model.setValue(model.getValue() + 0.01);\r\n        await this._waitFrame();\r\n        ResourceManager.Instance.cleanup();\r\n        model.setValue(model.getValue() + 0.01);\r\n        await this._waitFrame();\r\n        let sceneMgr = UnityEngine.SceneManagement.SceneManager;\r\n        let resources = UnityEngine.Resources;\r\n        sceneMgr.LoadScene(SceneConfigs.LoadingScene.Level);\r\n        model.setValue(model.getValue() + 0.01);\r\n        await this._waitFrame();\r\n        await resources.UnloadUnusedAssets();\r\n        model.setValue(model.getValue() + 0.1);\r\n        await this._waitFrame();\r\n        let logicScene = this._sceneMap.get(config.Name);\r\n        if (logicScene == null) {\r\n            logicScene = new config.Class(config);\r\n            this._sceneMap.set(config.Name, logicScene);\r\n        }\r\n        logicScene.OnEnter();\r\n        model.setValue(model.getValue() + 0.02);\r\n        await this._waitFrame();\r\n        //加载场景\r\n        await sceneMgr.LoadSceneAsync(config.Level);\r\n        model.setValue(model.getValue() + 0.15);\r\n        await this._waitFrame();\r\n        let curProgress: number = model.getValue();\r\n        //预加载场景资源\r\n        await logicScene.preloadAsync(model, 0.65);\r\n        model.setValue(curProgress + 0.65);\r\n        await this._waitFrame();\r\n        logicScene.OnComplete();\r\n        model.setValue(1);\r\n        await this._waitFrame();\r\n        this._currentScene = logicScene;\r\n        //释放loading\r\n        UIManager.Instance.destroyWindow(config.Loading);\r\n        await this._waitFrame();\r\n        resources.UnloadUnusedAssets();\r\n    }\r\n}","import IDestroyable from \"../../interface/IDestroyable\";\r\nimport {SceneConfig} from \"../../../game/scenes/config/SceneConfig\";\r\nimport {System} from \"csharp\";\r\nimport {IUILoadingModel} from \"../../../game/ui/uiLoading/IUILoading\";\r\nimport {string} from \"../../utils/StringUtil\";\r\n\r\n/**\r\n * 场景基类\r\n * @author by passion \r\n * @create time 2021/6/9 13:52\r\n**/\r\nexport class BaseScene implements IDestroyable {\r\n    /**\r\n     * 场景配置\r\n     */\r\n    protected _config: SceneConfig;\r\n    /**\r\n     * 预加载的资源\r\n     */\r\n    protected _preloadResources: Map<string, System.Type>;\r\n    /**\r\n     * 预加载的prefab\r\n     */\r\n    protected _preloadPrefab: Array<string>;\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param config\r\n     */\r\n    constructor(config: SceneConfig) {\r\n        this._config = config;\r\n        this._preloadResources = new Map<string, System.Type>();\r\n        this._preloadPrefab = new Array<string>();\r\n        this.OnCreate();\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.OnDestroy();\r\n    }\r\n\r\n    /**\r\n     * 创建时\r\n     * @constructor\r\n     */\r\n    protected OnCreate() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 释放时\r\n     * @constructor\r\n     */\r\n    protected OnDestroy() {\r\n        this._config = null;\r\n        this._preloadPrefab = null;\r\n        this._preloadResources = null;\r\n    }\r\n\r\n    /**\r\n     * 进入时\r\n     * @constructor\r\n     */\r\n    public OnEnter() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 离开时\r\n     * @constructor\r\n     */\r\n    public OnLeave() {\r\n        this._preloadResources.clear();\r\n        this._preloadPrefab.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 加载完成时\r\n     * @constructor\r\n     */\r\n    public OnComplete() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 预加载场景资源\r\n     * @param model\r\n     * @param maxProgress\r\n     */\r\n    public async preloadAsync(model?: IUILoadingModel, maxProgress?: number) {\r\n\r\n    }\r\n\r\n    /**\r\n     * 添加预加载prefab\r\n     * @param path\r\n     */\r\n    public addPreloadPrefab(path: string) {\r\n        if (string.IsNullOrEmpty(path) || !path.endsWith(\".prefab\")) {\r\n            console.error(\"scene preload prefab path must end with .prefab\");\r\n            return;\r\n        }\r\n        this._preloadPrefab.push(path);\r\n    }\r\n\r\n    /**\r\n     * 添加预加载资源类型\r\n     * @param path\r\n     * @param resType\r\n     */\r\n    public addPreloadResource(path: string, resType: System.Type) {\r\n        if(string.IsNullOrEmpty(path)){\r\n            return;\r\n        }\r\n        if (this._preloadResources.has(path)) {\r\n            console.log(\"repeat add preload resource,path:\" + path);\r\n            return;\r\n        }\r\n        this._preloadResources.set(path, resType);\r\n    }\r\n\r\n    /**\r\n     * get config\r\n     */\r\n    public get config(): SceneConfig {\r\n        return this._config;\r\n    }\r\n}","import EventDispatcher from \"../utils/EventDispatcher\";\r\nimport {ISingleton} from \"../interface/ISingleton\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {EUILayer, UILayerInfo, UILayers} from \"./config/UILayers\";\r\nimport {UIWindow} from \"./UIWindow\";\r\nimport {UILayer} from \"./component/UILayer\";\r\nimport {$typeof} from \"puerts\";\r\nimport Handler from \"../utils/Handler\";\r\nimport {UIWindowNames} from \"./config/UIWindowNames\";\r\nimport {UIConfigs} from \"./config/UIConfigs\";\r\nimport {UIMessageNames} from \"./config/UIMessageNames\";\r\nimport {EUIAction} from \"./config/EUIAction\";\r\nimport {GameObjectPool} from \"../resource/GameObjectPool\";\r\n\r\n/**\r\n * @author by passion\r\n * @create time 2021/6/1 10:25\r\n *\r\n * UI管理器\r\n **/\r\nexport default class UIManager extends EventDispatcher implements ISingleton {\r\n    get uiCamera(): UnityEngine.Camera {\r\n        return this._uiCamera;\r\n    }\r\n\r\n    public static Instance: UIManager = new UIManager();\r\n    //ui场景根目录\r\n    static UIRootPath: string = \"UIRoot\";\r\n    //事件路径\r\n    static EventSystemPath: string = \"EventSystem\";\r\n    //camera路径\r\n    static UICameraPath = UIManager.UIRootPath + \"/UICamera\";\r\n    //分辨率\r\n    static Resolution = new UnityEngine.Vector2(750, 1334);\r\n    //窗口最大可使用的相对order_in_layer\r\n    static MaxOrderPerWindow: number = 10;\r\n\r\n    //所有窗口记录\r\n    private _windowMap: Map<UIWindowNames, UIWindow>;\r\n    //加载回调\r\n    private _loadHandlerMap: Map<UIWindowNames, Handler>;\r\n    //打开中的弹窗\r\n    private _openingDialogs: Map<UIWindowNames, UIWindow>;\r\n    //ui摄像机\r\n    private _uiCamera: UnityEngine.Camera;\r\n    //层级map\r\n    private _layerMap: Map<EUILayer, UILayer>;\r\n    //根节点obj\r\n    private _gameObject: UnityEngine.GameObject;\r\n    //根节点trans\r\n    private _transform: UnityEngine.Transform;\r\n\r\n    /**\r\n     * 密封构造函数\r\n     */\r\n    private constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public initialize(): void {\r\n        UILayers.set();\r\n        this._loadHandlerMap = new Map<UIWindowNames, Handler>();\r\n        this._windowMap = new Map<UIWindowNames, UIWindow>();\r\n        this._openingDialogs = new Map<UIWindowNames, UIWindow>();\r\n        this._layerMap = new Map<EUILayer, UILayer>();\r\n        this._gameObject = UnityEngine.GameObject.Find(UIManager.UIRootPath);\r\n        this._transform = this._gameObject.transform;\r\n        let cameraRoot = UnityEngine.GameObject.Find(UIManager.UICameraPath);\r\n        this._uiCamera = cameraRoot.GetComponent($typeof(UnityEngine.Camera)) as UnityEngine.Camera;\r\n        UnityEngine.Object.DontDestroyOnLoad(this._gameObject);\r\n        let eventSys = UnityEngine.GameObject.Find(UIManager.EventSystemPath);\r\n        UnityEngine.Object.DontDestroyOnLoad(eventSys);\r\n        UILayers.walk(Handler.create(this, (layer_info: UILayerInfo) => {\r\n            let go = new UnityEngine.GameObject(layer_info.name);\r\n            let trans = go.transform;\r\n            trans.SetParent(this._transform);\r\n            let newLayer = new UILayer(this._transform, layer_info.name);\r\n            newLayer.onCreate(layer_info);\r\n            this._layerMap.set(layer_info.type, newLayer);\r\n        }, null, false));\r\n    }\r\n\r\n    /**\r\n     * 打开界面\r\n     * @param uiName 界面名\r\n     * @param args 参数列表\r\n     */\r\n    public openWindow(uiName: UIWindowNames, ...args: any[]): boolean {\r\n        let window = this._windowMap.get(uiName);\r\n        //不存在ui，先初始化\r\n        if (window == null) {\r\n            window = new UIWindow();\r\n            this._windowMap.set(uiName, window);\r\n            this.initWindow(uiName, window);\r\n        } else {\r\n            if (window.action == EUIAction.Loading || window.action == EUIAction.Opening) {\r\n                //TODO 目前打开中，或者在加载中就直接返回，之后按需求修改。\r\n                return true;\r\n            }\r\n        }\r\n        this.innerOpenWindow(window, args);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 关闭界面\r\n     * @param uiName 界面名\r\n     */\r\n    public closeWindow(uiName: UIWindowNames): boolean {\r\n        let window = this._windowMap.get(uiName);\r\n        if (window == null) {\r\n            return false;\r\n        }\r\n        this.innerCloseWindow(window);\r\n    }\r\n\r\n    /**\r\n     * 释放除去某一层的ui\r\n     * @param layer\r\n     */\r\n    public destroyWindowExceptLayer(layer: EUILayer) {\r\n        this._windowMap.forEach((window, name) => {\r\n            if (window.layer != layer) {\r\n                this.innerCloseWindow(window);\r\n                this.innerDestroyWindow(window);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 释放窗口\r\n     * @param uiName\r\n     */\r\n    public destroyWindow(uiName: UIWindowNames) {\r\n        let window = this._windowMap.get(uiName);\r\n        if (window == null) {\r\n            return;\r\n        }\r\n        this.innerCloseWindow(window);\r\n        this.innerDestroyWindow(window);\r\n    }\r\n\r\n    /**\r\n     * 获取界面\r\n     * @param uiName\r\n     */\r\n    public getWindow(uiName: UIWindowNames): UIWindow {\r\n        return this._windowMap.get(uiName);\r\n    }\r\n\r\n    //-------------------------------private----------------------\r\n\r\n    /**\r\n     * 初始化界面\r\n     * @param uiName\r\n     * @param window\r\n     */\r\n    private initWindow(uiName: UIWindowNames, window: UIWindow): UIWindow {\r\n        window.action = EUIAction.Initing;\r\n        let config = UIConfigs.get(uiName);\r\n        if (config == null) {\r\n            console.error(\"UIWindowNames not exist in UIConfigs,name index is:\" + UIWindowNames[uiName]);\r\n            return;\r\n        }\r\n        let layer = this._layerMap.get(config.layer);\r\n        if (layer == null) {\r\n            console.error(`No layer named:${EUILayer[config.layer]}`);\r\n            return;\r\n        }\r\n        window.name = uiName;\r\n        let eventDispatcher = new EventDispatcher();\r\n        if (config.model != null) {\r\n            window.model = new config.model(eventDispatcher, uiName);\r\n        }\r\n        if (config.ctrl != null) {\r\n            window.ctrl = new config.ctrl(eventDispatcher, window.model);\r\n        }\r\n        if (config.view != null) {\r\n            window.view = new config.view(layer, UIWindowNames[config.name], eventDispatcher, window.model, window.ctrl);\r\n        }\r\n        window.layer = config.layer;\r\n        window.prefabPath = config.prefabPath;\r\n        window.components = config.components;\r\n        window.type = config.type;\r\n        window.action = EUIAction.None;\r\n        this.event(UIMessageNames.UIFRAME_ON_WINDOW_CREATE, window);\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * 关闭界面，会处理可能在加载的情况，然后再禁用界面\r\n     * @param window\r\n     */\r\n    private innerCloseWindow(window: UIWindow) {\r\n        let deactivate: boolean = true;\r\n        //还在加载中就要关闭界面把加载回调给清除,加载中view还没拉起来就没必要去禁用view也不能去禁用会报错\r\n        if (window.action == EUIAction.Loading) {\r\n            let handler = this._loadHandlerMap.get(window.name);\r\n            handler && handler.clear();\r\n            this._loadHandlerMap.delete(window.name);\r\n            window.action = EUIAction.None;\r\n            deactivate = false;\r\n        }\r\n        deactivate && this.deactivateWindow(window);\r\n    }\r\n\r\n    /**\r\n     * 内部打开窗口，处理加载\r\n     * @param window\r\n     * @param args\r\n     */\r\n    private innerOpenWindow(window: UIWindow, ...args: any[]) {\r\n        if (window.action == EUIAction.Opening || window.isOpened) {\r\n            console.error(`you should close window first,window name: ${UIWindowNames[window.name]}`);\r\n            return;\r\n        }\r\n        if (window.isLoaded) {\r\n            this.activateWindow(window);\r\n        } else {\r\n            window.action = EUIAction.Loading;\r\n            let loadCB: Handler = Handler.create(this, (window: UIWindow, args: any[]) => {\r\n                window.isLoaded = true;\r\n                let go = GameObjectPool.Instance.getLoadedGameObject(window.prefabPath, true);\r\n                let layer: UILayer = this._layerMap.get(window.layer);\r\n                let trans = go.transform;\r\n                trans.SetParent(layer.transform);\r\n                trans.name = UIWindowNames[window.name];\r\n                window.action = EUIAction.None;\r\n                window.view.onCreate();\r\n                this.activateWindow(window, args);\r\n            }, [window, args], true);\r\n            this._loadHandlerMap.set(window.name, loadCB);\r\n            let loadArray: Array<string> = window.components && window.components.concat([window.prefabPath]) || [window.prefabPath];\r\n            GameObjectPool.Instance.preLoadGameObjectAsync(loadArray, loadCB);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 激活界面\r\n     * @param window\r\n     * @param args\r\n     */\r\n    private activateWindow(window: UIWindow, ...args: any[]) {\r\n        if (window.isOpened) {\r\n            return\r\n        }\r\n        window.action = EUIAction.Opening;\r\n        window?.model.activate(args);\r\n        window?.ctrl.activate(args);\r\n        window.view.setActive(true);\r\n        window.action = EUIAction.None;\r\n        window.isOpened = true;\r\n        this.event(UIMessageNames.UIFRAME_ON_WINDOW_OPEN, window);\r\n    }\r\n\r\n    /**\r\n     * 禁用界面\r\n     * @param window\r\n     */\r\n    private deactivateWindow(window: UIWindow) {\r\n        if (!window.isOpened) {\r\n            return\r\n        }\r\n        window.action = EUIAction.Closing;\r\n        window?.model.deactivate();\r\n        window?.ctrl.deactivate();\r\n        window.view.setActive(false);\r\n        window.action = EUIAction.None;\r\n        window.isOpened = false;\r\n        this.event(UIMessageNames.UIFRAME_ON_WINDOW_CLOSE, window);\r\n    }\r\n\r\n    private innerDestroyWindow(window: UIWindow) {\r\n        if (window.isLoaded) {\r\n            GameObjectPool.Instance.recycleGameObject(window.prefabPath, window.view.gameObject);\r\n        }\r\n        window.model?.destroy();\r\n        window.ctrl?.destroy();\r\n        window.view?.destroy();\r\n        this._windowMap.delete(window.name);\r\n    }\r\n}","import {UIWindowNames} from \"./config/UIWindowNames\";\r\nimport UIBaseModel from \"./base/UIBaseModel\";\r\nimport UIBaseCtrl from \"./base/UIBaseCtrl\";\r\nimport {EUIType} from \"./config/EUIType\";\r\nimport {EUILayer} from \"./config/UILayers\";\r\nimport {UIBaseView} from \"./base/UIBaseView\";\r\nimport {EUIAction} from \"./config/EUIAction\";\r\n\r\n/**\r\n * @author by passion \r\n * @create time 2021/6/1 10:26\r\n * 窗口包装器\r\n**/\r\nexport class UIWindow {\r\n    /**\r\n     * ui名\r\n     */\r\n    name:UIWindowNames;\r\n    /**\r\n     * 层级\r\n     */\r\n    layer:EUILayer = EUILayer.BackgroundLayer;\r\n    /**\r\n     * 数据\r\n     */\r\n    model:UIBaseModel;\r\n    /**\r\n     * 控制器\r\n     */\r\n    ctrl:UIBaseCtrl;\r\n    /**\r\n     * 界面\r\n     */\r\n    view:UIBaseView;\r\n    /**\r\n     * 预设路径\r\n     */\r\n    prefabPath:string = \"\";\r\n    /**\r\n     * 预加载组件prefab\r\n     */\r\n    components:Array<string> = [];\r\n    /**\r\n     * ui类型\r\n     */\r\n    type:EUIType;\r\n    /**\r\n     * ui当前进行中的行为，行为完成置为none\r\n     */\r\n    action:EUIAction = EUIAction.None;\r\n    /**\r\n     * 是否加载完成\r\n     */\r\n    isLoaded:boolean = false;\r\n    /**\r\n     * 是否打开\r\n     */\r\n    isOpened:boolean = false;\r\n}","import IDestroyable from \"../../interface/IDestroyable\";\r\nimport {IComponent} from \"../../interface/IComponent\";\r\nimport EventDispatcher from \"../../utils/EventDispatcher\";\r\nimport UIBaseModel from \"./UIBaseModel\";\r\n\r\nexport default class UIBaseCtrl implements IDestroyable, IComponent {\r\n    /**\r\n     * 数据基类\r\n     */\r\n    _eventHandle: EventDispatcher;\r\n    /**\r\n     * 数据\r\n     */\r\n    _model: UIBaseModel;\r\n\r\n    constructor(eventDispatcher: EventDispatcher, model: UIBaseModel) {\r\n        this._eventHandle = eventDispatcher;\r\n        this._model = model;\r\n        this.onCreate();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.onDestroy();\r\n        this._eventHandle = null;\r\n        this._model = null;\r\n    }\r\n\r\n    onCreate(): void {\r\n    }\r\n\r\n    onDestroy(): void {\r\n    }\r\n\r\n    onEnable(...args: any[]): void {\r\n    }\r\n\r\n    onDisable(): void {\r\n    }\r\n\r\n    onAddListener(): void {\r\n\r\n    }\r\n\r\n    onRemoveListener(): void {\r\n\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.onRemoveListener();\r\n        this.onDisable();\r\n    }\r\n\r\n    public activate(...args: any[]) {\r\n        this.onAddListener();\r\n        this.onEnable(args);\r\n    }\r\n}\r\n\r\n/**\r\n * 类构造函数接口，用于类型限定\r\n */\r\nexport interface IUIBaseCtrlCtor {\r\n    new(eventDispatcher: EventDispatcher, model: UIBaseModel): UIBaseCtrl;\r\n}","/**\r\n * ui数据基类\r\n */\r\nimport EventDispatcher from \"../../utils/EventDispatcher\";\r\nimport {UIWindowNames} from \"../config/UIWindowNames\";\r\nimport IDestroyable from \"../../interface/IDestroyable\";\r\nimport {IComponent} from \"../../interface/IComponent\";\r\nimport UIBaseCtrl from \"./UIBaseCtrl\";\r\n\r\nexport default class UIBaseModel implements IDestroyable, IComponent {\r\n    /**\r\n     * ui内部之间的事件传递\r\n     */\r\n    _eventHandle: EventDispatcher;\r\n    /**\r\n     * ui名字\r\n     */\r\n    _uiName: UIWindowNames;\r\n\r\n    constructor(eventDispatcher: EventDispatcher, uiName: UIWindowNames) {\r\n        this._eventHandle = eventDispatcher;\r\n        this._uiName = uiName;\r\n        this.onCreate();\r\n    }\r\n\r\n    destroy(): void {\r\n        this.onDestroy();\r\n        this._eventHandle.offAllCaller(this);\r\n        this._eventHandle = null;\r\n        this._uiName = null;\r\n    }\r\n\r\n    onCreate() {\r\n    }\r\n\r\n    onDestroy(): void {\r\n\r\n    }\r\n\r\n    onEnable(...args: any[]): void {\r\n    }\r\n\r\n    onDisable(): void {\r\n    }\r\n\r\n    onAddListener(): void {\r\n\r\n    }\r\n\r\n    onRemoveListener(): void {\r\n\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.onRemoveListener();\r\n        this.onDisable();\r\n    }\r\n\r\n    public activate(...args: any[]) {\r\n        this.onAddListener();\r\n        this.onEnable(args);\r\n    }\r\n}\r\n\r\n/**\r\n * 类构造函数接口，用于类型限定\r\n */\r\nexport interface IUIBaseModelCtor {\r\n    new(eventDispatcher: EventDispatcher, uiName: UIWindowNames): UIBaseModel;\r\n}","import {UIBaseContainer} from \"../component/UIBaseContainer\";\r\nimport EventDispatcher from \"../../utils/EventDispatcher\";\r\nimport UIBaseModel from \"./UIBaseModel\";\r\nimport UIBaseCtrl from \"./UIBaseCtrl\";\r\nimport {UICanvas} from \"../component/UICanvas\";\r\nimport {UILayer} from \"../component/UILayer\";\r\nimport {UnityEngine} from \"csharp\";\r\n\r\n/**\r\n * ui基类\r\n */\r\nexport class UIBaseView extends UIBaseContainer {\r\n    private _eventHandle: EventDispatcher;\r\n    private _canvas: UICanvas;\r\n    private _model: UIBaseModel;\r\n    private _ctrl: UIBaseCtrl;\r\n    private _baseOrder: number;\r\n    //layer引用\r\n    private _layer: UILayer;\r\n\r\n    constructor(layer: UILayer, relativePath: string, eventDispatcher: EventDispatcher, model: UIBaseModel, ctrl: UIBaseCtrl) {\r\n        super(layer.transform, relativePath);\r\n        this._layer = layer;\r\n        this._baseOrder = 0;\r\n        this._model = model;\r\n        this._ctrl = ctrl;\r\n        this._eventHandle = eventDispatcher;\r\n    }\r\n\r\n    onCreate(): void {\r\n        super.onCreate();\r\n        this._canvas = this.addComponent(UICanvas, \"\", [0, this]);\r\n        this._rectTransform.offsetMax = UnityEngine.Vector2.zero;\r\n        this._rectTransform.offsetMin = UnityEngine.Vector2.zero;\r\n        this._rectTransform.localScale = UnityEngine.Vector3.zero;\r\n        this._rectTransform.localPosition = UnityEngine.Vector3.zero;\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._model = null;\r\n        this._ctrl = null;\r\n        this._canvas = null;\r\n        this._eventHandle = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    onEnable(...arg: any[]): void {\r\n        this._baseOrder = this._layer.popWindowOrder();\r\n        super.onEnable();\r\n        this.onAddListener();\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.onRemoveListener();\r\n        super.onDisable();\r\n        this._layer.pushWindowOrder();\r\n    }\r\n\r\n    onAddListener(): void {\r\n\r\n    }\r\n\r\n    onRemoveListener(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 基础层级\r\n     */\r\n    public get baseOrder(): number {\r\n        return this._baseOrder;\r\n    }\r\n\r\n    /**\r\n     * 获取控制器\r\n     */\r\n    public get ctrl(): UIBaseCtrl {\r\n        return this._ctrl;\r\n    }\r\n\r\n    /**\r\n     * 获取数据\r\n     */\r\n    public get model(): UIBaseModel {\r\n        return this._model;\r\n    }\r\n}\r\n\r\n/**\r\n * 类类型限定\r\n */\r\nexport interface IUIBaseViewCtor {\r\n    new(layer: UILayer, relativePath: string, eventDispatcher: EventDispatcher, model: UIBaseModel, ctrl: UIBaseCtrl): UIBaseView;\r\n}","/**\r\n * ui基类\r\n */\r\nimport {UnityEngine} from \"csharp\";\r\nimport {UIUtil} from \"../util/UIUtil\";\r\nimport {$typeof} from \"puerts\";\r\nimport {IUIComponent} from \"../../interface/IUIComponent\";\r\n\r\nexport class UIBaseComponent implements IUIComponent {\r\n    /**\r\n     * 持有者:间接持有或直接持有【子节点或孙子节点】\r\n     */\r\n    protected _holder: UnityEngine.Transform;\r\n    /**\r\n     * transform对应的gameObject\r\n     */\r\n    protected _gameObject: UnityEngine.GameObject;\r\n    /**\r\n     * transform组件\r\n     */\r\n    protected _transform: UnityEngine.Transform;\r\n    /**\r\n     * ui rectTrans组件\r\n     */\r\n    protected _rectTransform: UnityEngine.RectTransform;\r\n    /**\r\n     * 组件名字\r\n     */\r\n    protected _name: string;\r\n    /**\r\n     * 是否激活\r\n     */\r\n    protected _active: boolean;\r\n    /**\r\n     * 相对路径\r\n     */\r\n    protected _relativePath: string;\r\n\r\n    /**\r\n     * 添加组件\r\n     * @param holder\r\n     * @param relativePath 相对holder的路径\r\n     */\r\n    constructor(holder: UnityEngine.Transform, relativePath: string) {\r\n        this._holder = holder;\r\n        this._relativePath = relativePath;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.onDestroy();\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._holder = null;\r\n        this._gameObject = null;\r\n        this._name = null;\r\n        this._transform = null;\r\n    }\r\n\r\n    onCreate(): void {\r\n        this._transform = UIUtil.findTrans(this._holder, this._relativePath);\r\n        this._gameObject = this._transform.gameObject;\r\n        this._name = this._gameObject.name;\r\n        this._rectTransform = UIUtil.findComponent(this._transform, $typeof(UnityEngine.RectTransform));\r\n    }\r\n\r\n    onDisable(): void {\r\n    }\r\n\r\n    onEnable(): void {\r\n    }\r\n\r\n    /**\r\n     * 设置激活与反激活\r\n     * @param active\r\n     */\r\n    public setActive(active: boolean) {\r\n        if (this._active == active) {\r\n            return;\r\n        }\r\n        this._active = active;\r\n        if (active) {\r\n            this._gameObject.SetActive(active);\r\n            this.onEnable();\r\n        } else {\r\n            this.onDisable();\r\n            this._gameObject.SetActive(active);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取是否激活\r\n     * @return boolean 是否激活\r\n     */\r\n    public getActive(): boolean {\r\n        return this._active;\r\n    }\r\n\r\n    /**\r\n     * 获取组件名字\r\n     */\r\n    public getName(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * 相对路径\r\n     */\r\n    public getRelativePath(): string {\r\n        return this._relativePath;\r\n    }\r\n\r\n    /**\r\n     * 获取transform节点\r\n     */\r\n    public get transform(): UnityEngine.Transform {\r\n        return this._transform;\r\n    }\r\n\r\n    /**\r\n     * 获取holder\r\n     */\r\n    public get holder(): UnityEngine.Transform {\r\n        return this._holder;\r\n    }\r\n\r\n    /**\r\n     * 获取游戏对象\r\n     */\r\n    public get gameObject(): UnityEngine.GameObject {\r\n        return this._gameObject;\r\n    }\r\n}\r\n\r\n/**\r\n * 类型限定\r\n */\r\nexport interface IUIBaseComponentCtor {\r\n    new(holder: UnityEngine.Transform, relativePath: string): IUIComponent;\r\n}","/**\r\n * 基础组件容器\r\n */\r\nimport {IUIBaseComponentCtor, UIBaseComponent} from \"./UIBaseComponent\";\r\nimport Handler from \"../../utils/Handler\";\r\nimport {IUIComponent} from \"../../interface/IUIComponent\";\r\n\r\nexport class UIBaseContainer extends UIBaseComponent {\r\n    /**\r\n     * 所有组件 【key：相对路径，value：组件列表】\r\n     */\r\n    private _components: Map<string, Map<IUIBaseComponentCtor, IUIComponent>>;\r\n    /**\r\n     * 子节点数量\r\n     */\r\n    private _length: number;\r\n\r\n    onCreate(): void {\r\n        super.onCreate();\r\n        this._components = new Map<string, Map<IUIBaseComponentCtor, IUIComponent>>();\r\n        this._length = 0;\r\n    }\r\n\r\n    onDestroy(): void {\r\n        let handler: Handler = Handler.create(this, (component: UIBaseComponent) => {\r\n            component.destroy();\r\n        }, null, false);\r\n        this.walk(handler);\r\n        handler.recover();\r\n\r\n\r\n        this._components = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    onEnable(): void {\r\n        super.onEnable();\r\n        let handler: Handler = Handler.create(this, (component: UIBaseComponent) => {\r\n            component.onEnable();\r\n        }, null, false);\r\n        this.walk(handler);\r\n        handler.recover();\r\n    }\r\n\r\n    onDisable(): void {\r\n        super.onDisable();\r\n        let handler: Handler = Handler.create(this, (component: UIBaseComponent) => {\r\n            component.onDisable();\r\n        }, null, false);\r\n        this.walk(handler);\r\n        handler.recover();\r\n    }\r\n\r\n    /**\r\n     * 遍历所有组件：component_class参数不传，遍历某个Container下指定组件传入对应类型\r\n     * @param callback\r\n     * @param component_class\r\n     */\r\n    walk(callback: Handler, component_class?: IUIBaseComponentCtor) {\r\n        this._components.forEach((component_map: Map<IUIBaseComponentCtor, IUIComponent>) => {\r\n            if (component_map != null) {\r\n                component_map.forEach((component: IUIComponent, cmp_class: IUIBaseComponentCtor) => {\r\n                    if (component_class == null) {\r\n                        callback.runWith(component);\r\n                    } else if (cmp_class == component_class) {\r\n                        callback.runWith(component);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加组件\r\n     * @param component_class\r\n     * @param relativePath\r\n     * @param params\r\n     */\r\n    addComponent<T extends IUIComponent>(component_class: IUIBaseComponentCtor, relativePath: string, params?: any[]): T {\r\n        let component_inst: IUIComponent = new component_class(this._transform, relativePath);\r\n        component_inst.onCreate.apply(component_inst, params);\r\n        this.recordComponent(relativePath, component_class, component_inst);\r\n        this._length++;\r\n        return component_inst as T;\r\n    }\r\n\r\n    /**\r\n     * 获取单个组件，如果没有传入类类型，返回这个名字的第一个组件\r\n     * @param relativePath\r\n     * @param component_class\r\n     */\r\n    getComponent(relativePath: string, component_class: IUIBaseComponentCtor): IUIComponent {\r\n        if (relativePath == null || component_class == null) {\r\n            console.error(this.constructor.name + \"::getComponent function args error\");\r\n            return null;\r\n        }\r\n        if (!this._components.has(relativePath)) {\r\n            return null;\r\n        }\r\n        let cMap = this._components.get(relativePath);\r\n        return cMap.get(component_class);\r\n    }\r\n\r\n    /**\r\n     * 获取所有类型组件\r\n     * @param component_class\r\n     */\r\n    getComponents(component_class: IUIBaseComponentCtor) {\r\n        let components = new Array<IUIComponent>();\r\n        this.walk(Handler.create(this, (component) => {\r\n            components.push(component);\r\n        }, null, false), component_class);\r\n        return components;\r\n    }\r\n\r\n    /**\r\n     * 移除组件\r\n     * @param relativePath 相对路径\r\n     * @param component_class 类型\r\n     */\r\n    removeComponent(relativePath: string, component_class: IUIBaseComponentCtor): IUIComponent {\r\n        let component = this.getComponent(relativePath, component_class);\r\n        if (component != null) {\r\n            this._components.get(relativePath).delete(component_class);\r\n            component.destroy();\r\n            this._length--;\r\n        }\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 移除组件\r\n     * @param component_class\r\n     */\r\n    removeComponents(component_class: IUIBaseComponentCtor): Array<IUIComponent> {\r\n        let components = this.getComponents(component_class);\r\n        for (let i = 0; i < components.length; i++) {\r\n            let component = components[i];\r\n            this._components.get(component.getRelativePath()).delete(component_class);\r\n            component.destroy();\r\n            this._length--;\r\n        }\r\n        return components;\r\n    }\r\n\r\n    /**\r\n     * 记录组件\r\n     * @param relativePath\r\n     * @param component_class\r\n     * @param component\r\n     */\r\n    private recordComponent<T extends IUIComponent>(relativePath: string, component_class: IUIBaseComponentCtor, component: T) {\r\n        let componentsMap: Map<IUIBaseComponentCtor, IUIComponent> = this._components.get(relativePath);\r\n        if (componentsMap == null) {\r\n            componentsMap = new Map<IUIBaseComponentCtor, IUIComponent>();\r\n            componentsMap.set(component_class, component);\r\n            this._components.set(relativePath, componentsMap);\r\n            return;\r\n        }\r\n        if (componentsMap.has(component_class)) {\r\n            console.error(`can not repeat add component,name:【${component_class.name}】 ,relativePath:【${relativePath}】`);\r\n            return;\r\n        }\r\n        componentsMap.set(component_class, component);\r\n    }\r\n}","import {UIBaseComponent} from \"./UIBaseComponent\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {UIUtil} from \"../util/UIUtil\";\r\nimport {$typeof} from \"puerts\";\r\nimport {EUnitySortingLayers} from \"../../unity/UnityTagsAndLayers\";\r\nimport UIManager from \"../UIManager\";\r\nimport {UIBaseView} from \"../base/UIBaseView\";\r\n\r\n/**\r\n * ts侧canvas组件\r\n * -- 1、为了调整UI层级，所以这里的overrideSorting设置为true\r\n -- 2、如果只是类似NGUI的Panel那样划分drawcall管理，直接在预设上添加Canvas，并设置overrideSorting为false\r\n -- 3、这里的order是相对于window.view中base_order的差量，窗口内的order最多为10个---UIManager中配置\r\n -- 4、旧窗口内所有canvas的real_order都应该在新窗口之下，即保证旧窗口内包括UI特效在内的所有组件，不会跑到新窗口之上\r\n -- 5、UI逻辑代码禁止手动直接设置Unity侧Cavans组件的orderInLayer，全部使用本脚本接口调整层级，避免层级混乱\r\n */\r\nexport class UICanvas extends UIBaseComponent {\r\n    private _view: UIBaseView;\r\n    private _canvas: UnityEngine.Canvas;\r\n    private _graphicRaycaster: UnityEngine.UI.GraphicRaycaster;\r\n    private _relativeOrder: number;\r\n\r\n    onCreate(...args: any[]): void {\r\n        super.onCreate();\r\n        let relative_order = args[0] as number;\r\n        let view = args[1] as UIBaseView; \r\n        if (relative_order == null || view == null) {\r\n            console.error(\"UICanvas::arguments error,require relative order and view arg\");\r\n            return;\r\n        }\r\n        let canvas: UnityEngine.Canvas;\r\n        canvas = UIUtil.findComponent(this._transform, $typeof(UnityEngine.Canvas));\r\n        if (canvas == null) {\r\n            canvas = this._gameObject.AddComponent($typeof(UnityEngine.Canvas)) as UnityEngine.Canvas;\r\n        }\r\n        canvas.overrideSorting = true;\r\n        canvas.sortingLayerName = EUnitySortingLayers.UI;\r\n        this._canvas = canvas;\r\n\r\n        this._graphicRaycaster = UIUtil.findComponent(this._transform, $typeof(UnityEngine.UI.GraphicRaycaster));\r\n        if (this._graphicRaycaster == null) {\r\n            this._graphicRaycaster = this._gameObject.AddComponent($typeof(UnityEngine.UI.GraphicRaycaster)) as UnityEngine.UI.GraphicRaycaster;\r\n        }\r\n\r\n        this._relativeOrder = relative_order;\r\n        this._view = view;\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._canvas = null;\r\n        this._graphicRaycaster = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    onEnable(): void {\r\n        super.onEnable();\r\n        this.setOrder(this._relativeOrder);\r\n    }\r\n\r\n    public setOrder(relativeOrder: number) {\r\n        if (relativeOrder > UIManager.MaxOrderPerWindow) {\r\n            console.error(\"relative order is larger than ui manager define max order in per window!!!\");\r\n        }\r\n        this._relativeOrder = relativeOrder;\r\n        this._canvas.sortingOrder = (this._view as UIBaseView).baseOrder + relativeOrder;\r\n    }\r\n\r\n    /**\r\n     * 获取canvas对象\r\n     */\r\n    public get canvas(): UnityEngine.Canvas {\r\n        return this._canvas;\r\n    }\r\n\r\n    /**\r\n     * 获取层级\r\n     */\r\n    public get order(): number {\r\n        return this._relativeOrder;\r\n    }\r\n}","import {UIBaseComponent} from \"./UIBaseComponent\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {IAtlasConfig} from \"../../resource/config/AtlasConfig\";\r\nimport {UIUtil} from \"../util/UIUtil\";\r\nimport {ResourceManager} from \"../../resource/ResourceManager\";\r\nimport Handler from \"../../utils/Handler\";\r\n\r\n/**\r\n * image组件\r\n * @author by passion\r\n * @create time 2021/6/9 16:12\r\n **/\r\nexport class UIImage extends UIBaseComponent {\r\n    //unity侧image组件\r\n    private _unityImage: UnityEngine.UI.Image;\r\n    //图集数据\r\n    private _atlas: IAtlasConfig;\r\n    //当前图片名\r\n    private _spriteName: string;\r\n    //image专用active\r\n    private _innerActive: boolean;\r\n\r\n    /**\r\n     * 创建时\r\n     * @param args\r\n     * @param[0] 图集IAtlasConfig\r\n     */\r\n    onCreate(...args: any[]): void {\r\n        super.onCreate();\r\n        this._atlas = args[0];\r\n        this._unityImage = UIUtil.findImage(this._transform);\r\n        this._spriteName = this._unityImage.sprite.name;\r\n        this._innerActive = true;\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._atlas = null;\r\n        this._unityImage = null;\r\n        this._spriteName = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    setActive(active: boolean) {\r\n        super.setActive(active);\r\n        this._innerActive = active;\r\n    }\r\n\r\n    /**\r\n     * 设置填充\r\n     * @param fillAmount\r\n     */\r\n    public setFillAmount(fillAmount: number) {\r\n        this._unityImage.fillAmount = fillAmount;\r\n    }\r\n\r\n    /**\r\n     * 缓动填充\r\n     * @param fillAmount\r\n     * @param duration\r\n     */\r\n    public doFillAmount(fillAmount: number, duration: number) {\r\n        this._unityImage.DOFillAmount(fillAmount, duration);\r\n    }\r\n\r\n    /**\r\n     * 设置图片\r\n     * @param spriteName 图片名\r\n     * @param hideAtLoad 加载中是否隐藏\r\n     * @param atlas 图集配置\r\n     */\r\n    public setSprite(spriteName: string, hideAtLoad: boolean = true, atlas?: IAtlasConfig) {\r\n        if (this._spriteName == spriteName) {\r\n            return;\r\n        }\r\n        this._spriteName = spriteName;\r\n        if (this._unityImage == null) {\r\n            return;\r\n        }\r\n        if (this._innerActive && hideAtLoad) {\r\n            this._unityImage.gameObject.SetActive(false);\r\n        }\r\n        let useAtlas = atlas || this._atlas;\r\n        ResourceManager.Instance.loadImageAsync(spriteName, useAtlas, Handler.create(this, (n: string, sprite: UnityEngine.Sprite) => {\r\n            if (this._unityImage == null || sprite == null) {\r\n                return;\r\n            }\r\n            if (this._spriteName != n) {\r\n                return;\r\n            }\r\n            this._unityImage.sprite = sprite;\r\n            if (this._innerActive) this._unityImage.gameObject.SetActive(true);\r\n        }, [spriteName]));\r\n    }\r\n\r\n    /**\r\n     * 获取当前图片名\r\n     */\r\n    public get spriteName(): string {\r\n        return this._spriteName;\r\n    }\r\n\r\n    //----------------------private--------------\r\n}","import {UIBaseComponent} from \"./UIBaseComponent\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {EUnityLayers, EUnitySortingLayers} from \"../../unity/UnityTagsAndLayers\";\r\nimport {UIUtil} from \"../util/UIUtil\";\r\nimport {$typeof} from \"puerts\";\r\nimport UIManager from \"../UIManager\";\r\nimport {IUIComponent} from \"../../interface/IUIComponent\";\r\nimport {UILayerInfo} from \"../config/UILayers\";\r\n\r\n/**\r\n * ts侧layer层级管理器\r\n */\r\nexport class UILayer extends UIBaseComponent implements IUIComponent {\r\n    //canvas组件\r\n    private _canvas: UnityEngine.Canvas;\r\n    //canvas缩放\r\n    private _canvasScaler: UnityEngine.UI.CanvasScaler;\r\n    //图形射线检测\r\n    private _graphicRaycater: UnityEngine.UI.GraphicRaycaster;\r\n    private _topWindowOrder: number;\r\n    private _minWindowOrder: number;\r\n\r\n    onCreate(...args: any[]): void {\r\n        super.onCreate();\r\n        this._gameObject.layer = EUnityLayers.UI;\r\n        this._canvas = this._gameObject.AddComponent($typeof(UnityEngine.Canvas)) as UnityEngine.Canvas;\r\n        this._transform = this._canvas.transform;\r\n        this._gameObject = this._canvas.gameObject;\r\n        let layer: UILayerInfo = args[0];\r\n        let canvas = this._canvas;\r\n        canvas.renderMode = UnityEngine.RenderMode.ScreenSpaceCamera;\r\n        canvas.worldCamera = UIManager.Instance.uiCamera;\r\n        canvas.planeDistance = layer.planeDistance;\r\n        canvas.sortingLayerName = EUnitySortingLayers.UI;\r\n        canvas.sortingOrder = layer.orderInLayer;\r\n        canvas.pixelPerfect = true;\r\n        //scaler\r\n        this._canvasScaler = UIUtil.findComponent(this._transform, $typeof(UnityEngine.UI.CanvasScaler));\r\n        if (this._canvasScaler == null) {\r\n            this._canvasScaler = this._gameObject.AddComponent($typeof(UnityEngine.UI.CanvasScaler)) as UnityEngine.UI.CanvasScaler;\r\n        }\r\n        let canvasScaler = this._canvasScaler;\r\n        canvasScaler.uiScaleMode = UnityEngine.UI.CanvasScaler.ScaleMode.ScaleWithScreenSize;\r\n        canvasScaler.referenceResolution = UIManager.Resolution;\r\n        canvasScaler.screenMatchMode = UnityEngine.UI.CanvasScaler.ScreenMatchMode.MatchWidthOrHeight;\r\n\r\n        //raycater\r\n        this._graphicRaycater = UIUtil.findComponent(this._transform, $typeof(UnityEngine.UI.GraphicRaycaster));\r\n        if (this._graphicRaycater == null) {\r\n            this._graphicRaycater = this._gameObject.AddComponent($typeof(UnityEngine.UI.GraphicRaycaster)) as UnityEngine.UI.GraphicRaycaster;\r\n        }\r\n\r\n        this._topWindowOrder = layer.orderInLayer;\r\n        this._minWindowOrder = layer.orderInLayer;\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._canvas = null;\r\n        this._canvasScaler = null;\r\n        this._graphicRaycater = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    public pushWindowOrder() {\r\n        this._topWindowOrder -= UIManager.MaxOrderPerWindow;\r\n    }\r\n\r\n    public popWindowOrder(): number {\r\n        let c = this._topWindowOrder;\r\n        this._topWindowOrder += UIManager.MaxOrderPerWindow;\r\n        return c;\r\n    }\r\n}","import {UIBaseComponent} from \"./UIBaseComponent\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {UIUtil} from \"../util/UIUtil\";\r\n\r\n/**\r\n * ui文本\r\n * @author by passion\r\n * @create time 2021/6/9 15:56\r\n **/\r\nexport class UIText extends UIBaseComponent {\r\n    //unity侧文本引用\r\n    private _unityText: UnityEngine.UI.Text;\r\n    //当前内容\r\n    private _content: string;\r\n\r\n    onCreate(): void {\r\n        super.onCreate();\r\n        this._unityText = UIUtil.findText(this._transform);\r\n        this._content = this._unityText.text;\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._unityText = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    /**\r\n     * 获取文本内容\r\n     */\r\n    public get text(): string {\r\n        return this._content;\r\n    }\r\n\r\n    /**\r\n     * 设置文本\r\n     * @param content\r\n     */\r\n    public set text(content: string) {\r\n        if (this._content == content) {\r\n            return;\r\n        }\r\n        if (this._unityText != null) this._unityText.text = content;\r\n        this._content = content;\r\n    }\r\n}","/**\r\n * @author by passion \r\n * @create time 2021/6/1 11:01\r\n * ui当前的行为\r\n**/\r\nexport enum EUIAction {\r\n    /**\r\n     * 当前没有任何行为\r\n     */\r\n    None,\r\n    /**\r\n     * 初始化中\r\n     */\r\n    Initing,\r\n    /**\r\n     * 加载中\r\n     */\r\n    Loading,\r\n    /**\r\n     * 打开中\r\n     */\r\n    Opening ,\r\n    /**\r\n     * 关闭中\r\n     */\r\n    Closing,\r\n}","/**\r\n * ui类型\r\n */\r\nexport enum EUIType {\r\n    /**\r\n     * 普通ui\r\n     */\r\n    View,\r\n    /**\r\n     * 弹窗\r\n     */\r\n    Dialog\r\n}","import {UIWindowNames} from \"./UIWindowNames\";\r\nimport {EUILayer} from \"./UILayers\";\r\nimport {EUIType} from \"./EUIType\";\r\nimport {IUIBaseCtrlCtor} from \"../base/UIBaseCtrl\";\r\nimport {IUIBaseModelCtor} from \"../base/UIBaseModel\";\r\nimport {IUIBaseViewCtor} from \"../base/UIBaseView\";\r\nimport {UIHomeConfig} from \"../../../game/ui/uiHome/UIHomeConfig\";\r\nimport {UIBattleConfig} from \"../../../game/ui/uiBattle/UIBattleConfig\";\r\nimport {UILoadingConfig} from \"../../../game/ui/uiLoading/UILoadingConfig\";\r\n\r\n/**\r\n * 所有模块\r\n */\r\nlet UIModule = {\r\n    UIHome: UIHomeConfig,\r\n    UIBattle: UIBattleConfig,\r\n    UILoading: UILoadingConfig,\r\n};\r\n\r\n/**\r\n * ui配置结构体\r\n */\r\nexport class UIConfigInfo {\r\n    /**\r\n     * ui名\r\n     */\r\n    name: UIWindowNames;\r\n    /**\r\n     * 层级\r\n     */\r\n    layer: EUILayer;\r\n    /**\r\n     * 数据类\r\n     */\r\n    model: IUIBaseModelCtor;\r\n    /**\r\n     * 控制器类\r\n     */\r\n    ctrl: IUIBaseCtrlCtor;\r\n    /**\r\n     * 视图类\r\n     */\r\n    view: IUIBaseViewCtor;\r\n    /**\r\n     * prefab路径集合\r\n     */\r\n    prefabPath: string;\r\n    /**\r\n     * 预加载prefabs路径\r\n     */\r\n    components: Array<string>;\r\n    /**\r\n     * ui类型\r\n     */\r\n    type: EUIType;\r\n}\r\n\r\nlet UIConfigs: Map<UIWindowNames, UIConfigInfo> = new Map<UIWindowNames, UIConfigInfo>();\r\nfor (let moduleName in UIModule) {\r\n    let module = UIModule[moduleName];\r\n    for (let cfgName in module) {\r\n        let config: UIConfigInfo = module[cfgName];\r\n        if (UIConfigs.has(config.name)) {\r\n            console.error(\"Already exist ::\" + cfgName);\r\n        }\r\n        UIConfigs.set(config.name, config);\r\n    }\r\n}\r\n\r\nexport {UIConfigs}","/**\r\n * UI层级信息数据\r\n */\r\nimport Handler from \"../../utils/Handler\";\r\n\r\nexport class UILayerInfo {\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * 类型\r\n     */\r\n    type: EUILayer;\r\n    /**\r\n     * 名字 对应到Unity场景中的对象名\r\n     */\r\n    name: string;\r\n    planeDistance: number;\r\n    orderInLayer: number;\r\n}\r\n\r\nexport enum EUILayer {\r\n    //场景UI\r\n    SceneLayer,\r\n    //背景UI\r\n    BackgroundLayer,\r\n    //普通ui，多级窗口等\r\n    NormalLayer,\r\n    //信息ui\r\n    InfoLayer,\r\n    //弹窗提示\r\n    TipLayer,\r\n    //顶层ui，场景加载\r\n    TopLayer,\r\n}\r\n\r\n/**\r\n * 层级数据\r\n */\r\nexport class UILayers {\r\n    private constructor() {\r\n    }\r\n\r\n    static _layers: Map<EUILayer, UILayerInfo> = new Map<EUILayer, UILayerInfo>();\r\n\r\n    public static set() {\r\n        this._layers.set(EUILayer.SceneLayer, {\r\n            type: EUILayer.SceneLayer,\r\n            name: \"SceneLayer\",\r\n            planeDistance: 1000,\r\n            orderInLayer: 0\r\n        });\r\n        this._layers.set(EUILayer.BackgroundLayer, {\r\n            type: EUILayer.BackgroundLayer,\r\n            name: \"BackgroundLayer\",\r\n            planeDistance: 900,\r\n            orderInLayer: 1000\r\n        });\r\n        this._layers.set(EUILayer.NormalLayer, {\r\n            type: EUILayer.NormalLayer,\r\n            name: \"NormalLayer\",\r\n            planeDistance: 800,\r\n            orderInLayer: 2000\r\n        });\r\n        this._layers.set(EUILayer.InfoLayer, {\r\n            type: EUILayer.NormalLayer,\r\n            name: \"InfoLayer\",\r\n            planeDistance: 700,\r\n            orderInLayer: 3000\r\n        });\r\n        this._layers.set(EUILayer.TipLayer, {\r\n            type: EUILayer.TipLayer,\r\n            name: \"TipLayer\",\r\n            planeDistance: 600,\r\n            orderInLayer: 4000\r\n        });\r\n        this._layers.set(EUILayer.TopLayer, {\r\n            type: EUILayer.TopLayer,\r\n            name: \"TopLayer\",\r\n            planeDistance: 500,\r\n            orderInLayer: 5000\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取层级数据\r\n     * @param layer_type 层级定义\r\n     */\r\n    public static get(layer_type: EUILayer): UILayerInfo {\r\n        return UILayers._layers.get(layer_type);\r\n    }\r\n\r\n    /**\r\n     * 遍历\r\n     * @param callback\r\n     */\r\n    public static walk(callback: Handler) {\r\n        this._layers.forEach((v: UILayerInfo) => {\r\n            callback.runWith(v);\r\n        });\r\n    }\r\n}","export class UIMessageNames {\r\n    //ui创建\r\n    static readonly UIFRAME_ON_WINDOW_CREATE = \"UIFRAME_ON_WINDOW_CREATE\";\r\n    //ui打开\r\n    static readonly UIFRAME_ON_WINDOW_OPEN = \"UIFRAME_ON_WINDOW_OPEN\";\r\n    //ui关闭\r\n    static readonly UIFRAME_ON_WINDOW_CLOSE = \"UIFRAME_ON_WINDOW_CLOSE\";\r\n    //ui销毁\r\n    static readonly UIFRAME_ON_WINDOW_DESTROY = \"UIFRAME_ON_WINDOW_DESTROY\";\r\n}","export enum UIWindowNames {\r\n    /**\r\n     * 加载界面\r\n     */\r\n    UILoading,\r\n    /**\r\n     * 登录\r\n     */\r\n    UILogin,  \r\n    /**\r\n     * 主界面\r\n     */\r\n    UIHome,\r\n    /**\r\n     * 战斗主界面\r\n     */\r\n    UIBattleMain,\r\n}","import {System, TMPro, UnityEngine} from \"csharp\";\r\nimport {$typeof} from \"puerts\";\r\n\r\n/**\r\n * ui查询工具\r\n */\r\nexport class UIUtil {\r\n\r\n    /**\r\n     * 获取子节点\r\n     * @param trans\r\n     * @param index\r\n     */\r\n    public static getChild(trans: UnityEngine.Transform, index: number) {\r\n        return trans.GetChild(index);\r\n    }\r\n\r\n    /**\r\n     * 查组件\r\n     * @param trans\r\n     * @param ctype\r\n     * @param path\r\n     */\r\n    public static findComponent(trans: UnityEngine.Transform, ctype: System.Type, path?: string): any {\r\n        let targetTrans = trans;\r\n        if (path != null) {\r\n            targetTrans = trans.Find(path);\r\n        }\r\n        if (targetTrans == null) {\r\n            return null;\r\n        }\r\n        let cmp = targetTrans.GetComponent(ctype);\r\n        if (cmp != null) {\r\n            return cmp;\r\n        }\r\n        return targetTrans.GetComponentInChildren(ctype);\r\n    }\r\n\r\n    /**\r\n     * 获取transform\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findTrans(trans: UnityEngine.Transform, path: string): UnityEngine.Transform {\r\n        return trans.Find(path);\r\n    }\r\n\r\n    /**\r\n     * 查询文本\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findText(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.Text {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.Text), path);\r\n    }\r\n\r\n    /**\r\n     * 查询tmp文本\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findTmpText(trans: UnityEngine.Transform, path?: string): TMPro.TMP_Text {\r\n        return this.findComponent(trans, $typeof(TMPro.TMP_Text), path);\r\n    }\r\n\r\n    /**\r\n     * 查询图片\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findImage(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.Image {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.Image), path);\r\n    }\r\n\r\n    /**\r\n     * 查需按钮\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findButton(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.Button {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.Button), path);\r\n    }\r\n\r\n    /**\r\n     * 查询input\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findInput(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.InputField {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.InputField), path);\r\n    }\r\n\r\n    /**\r\n     * 查询slider\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findSlider(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.Slider {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.Slider), path);\r\n    }\r\n\r\n    /**\r\n     * 查询scrollRect\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findScrollRect(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.ScrollRect {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.ScrollRect), path);\r\n    }\r\n\r\n    /**\r\n     * 获取toggle\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findToggle(trans: UnityEngine.Transform, path?: string): UnityEngine.UI.Toggle {\r\n        return this.findComponent(trans, $typeof(UnityEngine.UI.Toggle), path);\r\n    }\r\n\r\n    /**\r\n     * 查询canvasGroup\r\n     * @param trans\r\n     * @param path\r\n     */\r\n    public static findCanvasGroup(trans: UnityEngine.Transform, path?: string): UnityEngine.CanvasGroup {\r\n        return this.findComponent(trans, $typeof(UnityEngine.CanvasGroup), path);\r\n    }\r\n}","/**\r\n * unity侧layer定义映射到ts侧\r\n */\r\nexport enum EUnityLayers {\r\n    Default,\r\n    /**\r\n     * 透明特效\r\n     */\r\n    TransparentFX,\r\n    /**\r\n     * 忽略射线检测层\r\n     */\r\n    IgnoreRaycast,\r\n    /**\r\n     * 水\r\n     */\r\n    Water = 4,\r\n    /**\r\n     * ui层\r\n     */\r\n    UI,\r\n}\r\n\r\n/**\r\n * unity侧sortingLayers定义\r\n */\r\nexport enum EUnitySortingLayers {\r\n    /**\r\n     * 默认层\r\n     */\r\n    Default = \"Default\",\r\n    /**\r\n     * ui层\r\n     */\r\n    UI = \"UI\",\r\n}","import Handler from \"./Handler\";\r\n\r\n/* \r\n* 可派发事件基类\r\n* */\r\nexport default class EventDispatcher {\r\n    private _events: any;\r\n\r\n    hasListener(type: string): boolean {\r\n        let listener: any = this._events && this._events[type];\r\n        return !!listener;\r\n    }\r\n\r\n    /**\r\n     * 派发事件。\r\n     * @param type    事件类型。\r\n     * @param data    （可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\r\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\r\n     */\r\n    public event(type: string, data: any = null): boolean {\r\n        if (!this._events || !this._events[type]) return false;\r\n\r\n        let listeners: any = this._events[type];\r\n        if (listeners.run) {\r\n            if (listeners.once) delete this._events[type];\r\n            data != null ? listeners.runWith(data) : listeners.run();\r\n        } else {\r\n            for (let i: number = 0, n: number = listeners.length; i < n; i++) {\r\n                let listener: Handler = listeners[i];\r\n                if (listener) {\r\n                    (data != null) ? listener.runWith(data) : listener.run();\r\n                }\r\n                if (!listener || listener.once) {\r\n                    listeners.splice(i, 1);\r\n                    i--;\r\n                    n--;\r\n                }\r\n            }\r\n            if (listeners.length === 0 && this._events) delete this._events[type];\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\r\n     * @param type        事件的类型。\r\n     * @param caller    事件侦听函数的执行域。\r\n     * @param listener    事件侦听函数。\r\n     * @param args        （可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    on(type: string, caller: any, listener: Function, args: any[] = null): EventDispatcher {\r\n        return this._createListener(type, caller, listener, args, false);\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\r\n     * @param type        事件的类型。\r\n     * @param caller    事件侦听函数的执行域。\r\n     * @param listener    事件侦听函数。\r\n     * @param args        （可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    once(type: string, caller: any, listener: Function, args: any[] = null): EventDispatcher {\r\n        return this._createListener(type, caller, listener, args, true);\r\n    }\r\n\r\n    /**@internal */\r\n    _createListener(type: string, caller: any, listener: Function, args: any[], once: boolean, offBefore: boolean = true): EventDispatcher {\r\n        //移除之前相同的监听\r\n        offBefore && this.off(type, caller, listener, once);\r\n\r\n        //使用对象池进行创建回收\r\n        let handler: Handler = EventHandler.create(caller || this, listener, args, once);\r\n        this._events || (this._events = {});\r\n\r\n        let events: any = this._events;\r\n        //默认单个，每个对象只有多个监听才用数组，节省一个数组的消耗\r\n        if (!events[type]) events[type] = handler;\r\n        else {\r\n            if (!events[type].run) events[type].push(handler);\r\n            else events[type] = [events[type], handler];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除侦听器。\r\n     * @param type        事件的类型。\r\n     * @param caller    事件侦听函数的执行域。\r\n     * @param listener    事件侦听函数。\r\n     * @param onceOnly    （可选）如果值为 true ,则只移除通过 once 方法添加的侦听器。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    off(type: string, caller: any, listener: Function, onceOnly: boolean = false): EventDispatcher {\r\n        if (!this._events || !this._events[type]) return this;\r\n        let listeners: any = this._events[type];\r\n        if (listeners != null) {\r\n            if (listeners.run) {\r\n                if ((!caller || listeners.caller === caller) && (listener == null || listeners.method === listener) && (!onceOnly || listeners.once)) {\r\n                    delete this._events[type];\r\n                    listeners.recover();\r\n                }\r\n            } else {\r\n                let count: number = 0;\r\n                let n = listeners.length;\r\n                for (let i: number = 0; i < n; i++) {\r\n                    let item: Handler = listeners[i];\r\n                    if (!item) {\r\n                        count++;\r\n                        continue;\r\n                    }\r\n                    if (item && (!caller || item.caller === caller) && (listener == null || item.method === listener) && (!onceOnly || item.once)) {\r\n                        count++;\r\n                        listeners[i] = null;\r\n                        item.recover();\r\n                    }\r\n                }\r\n                //如果全部移除，则删除索引\r\n                if (count === n) delete this._events[type];\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\r\n     * @param type    （可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    offAll(type: string = null): EventDispatcher {\r\n        let events: any = this._events;\r\n        if (!events) return this;\r\n        if (type) {\r\n            this._recoverHandlers(events[type]);\r\n            delete events[type];\r\n        } else {\r\n            for (let name in events) {\r\n                this._recoverHandlers(events[name]);\r\n            }\r\n            this._events = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除caller为target的所有事件监听\r\n     * @param    caller caller对象\r\n     */\r\n    offAllCaller(caller: any): EventDispatcher {\r\n        if (caller && this._events) {\r\n            for (let name in this._events) {\r\n                this.off(name, caller, null);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private _recoverHandlers(arr: any): void {\r\n        if (!arr) return;\r\n        if (arr.run) {\r\n            arr.recover();\r\n        } else {\r\n            for (let i: number = arr.length - 1; i > -1; i--) {\r\n                if (arr[i]) {\r\n                    arr[i].recover();\r\n                    arr[i] = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**@private */\r\nclass EventHandler extends Handler {\r\n\r\n    /**@private handler对象池*/\r\n    protected static _pool: any[] = [];\r\n\r\n    constructor(caller: any, method: Function, args: any[], once: boolean) {\r\n        super(caller, method, args, once);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            EventHandler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象池内创建一个Handler，默认会执行一次回收，如果不需要自动回收，设置once参数为false。\r\n     * @param caller    执行域(this)。\r\n     * @param method    回调方法。\r\n     * @param args        （可选）携带的参数。\r\n     * @param once        （可选）是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\r\n     * @return 返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function, args: any[] = null, once: boolean = true): Handler {\r\n        if (EventHandler._pool.length) return EventHandler._pool.pop().setTo(caller, method, args, once);\r\n        return new EventHandler(caller, method, args, once);\r\n    }\r\n}","export default class Handler {\r\n    /*资源池*/\r\n    protected static _pool: Handler[] = [];\r\n    private static _guid: number = 1;\r\n\r\n    caller: object | null;\r\n    method: Function | null;\r\n    args: any[] | null;\r\n    once: boolean = false;\r\n    protected _id = 0;\r\n\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\r\n     * @param    caller 执行域。\r\n     * @param    method 处理函数。\r\n     * @param    args 函数参数。\r\n     * @param    once 是否只执行一次。\r\n     */\r\n    constructor(caller: object | null = null, method: Function | null = null, args: any[] | null, once: boolean = false) {\r\n        this.set(caller, method, args, once);\r\n    }\r\n\r\n    /*\r\n    * @return 返回Handler实例\r\n    * */\r\n    private set(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\r\n        this._id = Handler._guid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n    * 直接执行\r\n    * */\r\n    run(): any {\r\n        if (this.method == null) return null;\r\n        let id: number = this._id;\r\n        let result: any = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /*\r\n    * 带参数的执行 自定义参数在后\r\n    * */\r\n    runWith(data: any): any {\r\n        if (this.method == null) return null;\r\n        let id: number = this._id;\r\n        let result: any;\r\n        if (data == null) {\r\n            result = this.method.apply(this.caller, this.args);\r\n        } else if (!this.args && !data.unshift) {\r\n            result = this.method.call(this.caller, data);\r\n        } else if (this.args) {\r\n            result = this.method.apply(this.caller, this.args.concat(data));\r\n        } else {\r\n            result = this.method.apply(this.caller, data)\r\n        }\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /*\r\n    * 清理对象\r\n    * */\r\n    clear(): Handler {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n    * 回收对象\r\n    * */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\r\n     * @param    caller 执行域(this)。\r\n     * @param    method 回调方法。\r\n     * @param    args 携带的参数。\r\n     * @param    once 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\r\n     * @return  返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\r\n        if (Handler._pool.length)\r\n            return (Handler._pool.pop() as Handler).set(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}","/**\r\n* @author by passion\r\n* @create time 2021/6/1\r\n**/\r\n\r\n//空字符串\r\nconst empty:string = \"\";\r\nlet string = {\r\n    /**\r\n     * 字符串是否是null或者空字符串\r\n     * @param s\r\n     * @constructor\r\n     */\r\n    IsNullOrEmpty: function (s: string) {\r\n        return s == null || s == empty;\r\n    },\r\n\r\n    /**\r\n     * 空字符串\r\n     */\r\n    get empty():string{\r\n        return empty;\r\n    }\r\n};\r\n\r\nexport {string}","import UnityTs from '../../UnityTs';\r\n/**\r\n * 延迟一帧执行\r\n */\r\nexport default class CallLater {\r\n    static I = new CallLater();\r\n    private static _mid: number = 1;\r\n    private _pool: LaterHandler[] = [];\r\n    private _map: { [key: string]: LaterHandler } = {};\r\n    private _laters: LaterHandler[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        let laters = this._laters;\r\n        let len = laters.length;\r\n        if (len > 0) {\r\n            for (let i = 0, n = len - 1; i <= n; i++) {\r\n                let handler = laters[i];\r\n                this._map[handler.key] = null;\r\n                if (handler.method !== null) {\r\n                    handler.run();\r\n                    handler.clear();\r\n                }\r\n                this._pool.push(handler);\r\n                i === n && (n = laters.length - 1);\r\n            }\r\n            laters.length = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): LaterHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = UnityTs.utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = (CallLater._mid++));\r\n        return this._map[cid + '.' + mid]\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        if (this._getHandler(caller, method) == null) {\r\n            let handler: LaterHandler;\r\n            if (this._pool.length)\r\n                handler = this._pool.pop();\r\n            else\r\n                handler = new LaterHandler();\r\n            //设置属性\r\n            handler.caller = caller;\r\n            handler.method = method;\r\n            handler.args = args;\r\n            //索引handler\r\n            var cid: number = caller ? caller.$_GID : 0;\r\n            var mid: number = (method as any)[\"$_TID\"];\r\n            handler.key = cid + '.' + mid;\r\n            this._map[handler.key] = handler\r\n            //插入队列\r\n            this._laters.push(handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run();\r\n            handler.clear();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/** @private */\r\nclass LaterHandler {\r\n    key: string;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(): void {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}","/*\r\n* \r\n* 时钟管理器 使用Utf.timer访问\r\n* */\r\nimport UnityTs from \"../../UnityTs\";\r\nimport CallLater from './CallLater';\r\n\r\nclass InnerTimer {\r\n    /*timer入口*/\r\n    static gSysTimer: InnerTimer = null;\r\n\r\n    /*对象池*/\r\n    private static _pool: any[] = [];\r\n    private static _mid: number = 1;\r\n\r\n    scale: number = 1;\r\n    currTimer: number = Date.now();\r\n    currFrame: number = 0;\r\n    /*两帧之间的时间间隔，单位：毫秒*/\r\n    _delta: number = 0;\r\n    _lastTimer: number = Date.now();\r\n\r\n    private _map: any[] = [];\r\n    private _handlers: any[] = [];\r\n    private _temp: any[] = [];\r\n    private _count: number = 0;\r\n\r\n    constructor(autoActive: boolean = true) {\r\n        autoActive && InnerTimer.gSysTimer && InnerTimer.gSysTimer.frameLoop(1, this, this._update);\r\n    }\r\n\r\n    /* 获取两帧之间的时间间隔，单位毫秒*/\r\n    get delta(): number {\r\n        return this._delta;\r\n    }\r\n\r\n    /* 帧循环*/\r\n    _update(): void {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = Date.now();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        let frame: number = this.currFrame = this.currFrame + this.scale;\r\n        let now: number = Date.now();\r\n        let awake: boolean = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        let timer: number = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n\r\n        let handlers: any[] = this._handlers;\r\n        this._count = 0;\r\n        for (let i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            let handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) {\r\n                let t: number = handler.useFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        } else {\r\n                            // 一帧可多次执行的情况。\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._count++;\r\n            }\r\n        }\r\n\r\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\r\n    }\r\n\r\n    /*整理handlers数组*/\r\n    _clearHandlers(): void {\r\n        let handlers: any[] = this._handlers;\r\n        for (let i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            let handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) this._temp.push(handler);\r\n            else this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n\r\n    /*回收handler*/\r\n    _recoverHandler(handler: TimerHandler): void {\r\n        if (this._map[handler.key] == handler) this._map[handler.key] = null;\r\n        handler.clear();\r\n        InnerTimer._pool.push(handler);\r\n    }\r\n\r\n    /* 创建TimerHandler实例*/\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n        let handler: TimerHandler;\r\n        if (coverBefore) {\r\n            handler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.useFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + Date.now() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n        handler = InnerTimer._pool.length > 0 ? InnerTimer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.useFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + Date.now() - this._lastTimer);\r\n\r\n        this._indexHandler(handler);\r\n        this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /*获取handler*/\r\n    _getHandler(caller: any, method: any): TimerHandler {\r\n        let cid: number = caller ? caller.$_GID || (caller.$_GID = UnityTs.utils.getGID()) : 0;\r\n        let mid: number = method.$_TID || (method.$_TID = (InnerTimer._mid++) * 100000);\r\n        return this._map[cid + mid];\r\n    }\r\n\r\n    /*\r\n    * 索引handler\r\n    * */\r\n    _indexHandler(handler: TimerHandler) {\r\n        let caller: any = handler.caller;\r\n        let method: any = handler.method;\r\n        let cid: number = caller ? caller.$_GID || (caller.$_GID = UnityTs.utils.getGID()) : 0;\r\n        let mid: number = method.$_TID || (method.$_TID = (InnerTimer._mid++) * 100000);\r\n        handler.key = cid + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n\r\n    /**\r\n     * 等待毫秒\r\n     * @param delay\r\n     */\r\n    async wait(delay: number) {\r\n        return new Promise<void>(resolve => {\r\n            this.once(delay, this, () => {\r\n                resolve();\r\n            }, null, true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 等待帧\r\n     * @param delay\r\n     */\r\n    async waitFrame(delay: number) {\r\n        return new Promise<void>(resolve => {\r\n            this.frameOnce(delay, this, () => {\r\n                resolve();\r\n            }, null, true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次。\r\n     * @param    delay    延迟时间(单位为毫秒)。\r\n     * @param    caller    执行域(this)。\r\n     * @param    method    定时器回调函数。\r\n     * @param    args    回调参数。\r\n     * @param    coverBefore    是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行。\r\n     * @param    delay    间隔时间(单位毫秒)。\r\n     * @param    caller    执行域(this)。\r\n     * @param    method    定时器回调函数。\r\n     * @param    args    回调参数。\r\n     * @param    coverBefore    是否覆盖之前的延迟执行，默认为 true 。\r\n     * @param    jumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        const handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler) handler.jumpFrame = jumpFrame;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次(基于帧率)。\r\n     * @param    delay    延迟几帧(单位为帧)。\r\n     * @param    caller    执行域(this)。\r\n     * @param    method    定时器回调函数。\r\n     * @param    args    回调参数。\r\n     * @param    coverBefore    是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行(基于帧率)。\r\n     * @param    delay    间隔几帧(单位为帧)。\r\n     * @param    caller    执行域(this)。\r\n     * @param    method    定时器回调函数。\r\n     * @param    args    回调参数。\r\n     * @param    coverBefore    是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /** 返回统计信息。*/\r\n    toString(): string {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + InnerTimer._pool.length;\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。\r\n     * @param    caller 执行域(this)。\r\n     * @param    method 定时器回调函数。\r\n     */\r\n    clear(caller: any, method: Function): void {\r\n        let handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = 0;\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理对象身上的所有定时器。\r\n     * @param    caller 执行域(this)。\r\n     */\r\n    clearAll(caller: any): void {\r\n        if (!caller) return;\r\n        let i: number = 0;\r\n        const n: number = this._handlers.length;\r\n        for (; i < n; i++) {\r\n            const handler: TimerHandler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = 0;\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即提前执行定时器，执行之后从队列中删除\r\n     * @param    caller 执行域(this)。\r\n     * @param    method 定时器回调函数。\r\n     */\r\n    runTimer(caller: any, method: Function): void {\r\n        const handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停时钟\r\n     */\r\n    pause(): void {\r\n        this.scale = 0;\r\n    }\r\n\r\n    /**\r\n     * 恢复时钟\r\n     */\r\n    resume(): void {\r\n        this.scale = 1;\r\n    }\r\n\r\n    //-----------延迟执行\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param    caller 执行域(this)。\r\n     * @param    method 定时器回调函数。\r\n     * @param    args 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args?: any[]): void {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param    caller 执行域(this)。\r\n     * @param    method 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n}\r\n\r\n/* 私有timer函数类*/\r\nclass TimerHandler {\r\n    key: number;\r\n    repeat: boolean;\r\n    delay: number;\r\n    useFrame: boolean;\r\n    exeTime: number;\r\n    caller: any;\r\n    method: Function;\r\n    args: any[];\r\n    jumpFrame: boolean;\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(withClear: boolean): void {\r\n        let caller: any = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        let method: Function = this.method;\r\n        let args: any[] = this.args;\r\n        withClear && this.clear();\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n\r\n/*\r\n* \r\n* timer管理器 如果需要新增timer，在这里新建实例，一般一个就够用了。\r\n* */\r\nexport class Timer {\r\n    /**\r\n     * 帧更新前的timer\r\n     */\r\n    static _timer: InnerTimer;\r\n    /**\r\n     * 帧更新后的timer\r\n     */\r\n    static _lateTimer: InnerTimer;\r\n    private static _inited: boolean = false;\r\n\r\n    //私有构造函数\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * 普通timer\r\n     */\r\n    public static get timer() {\r\n        return this._timer;\r\n    }\r\n\r\n    /**\r\n     * 后置timer\r\n     */\r\n    public static get lateTimer() {\r\n        return this._lateTimer;\r\n    }\r\n\r\n    public static init() {\r\n        if (this._inited) {\r\n            return;\r\n        }\r\n        this._inited = true;\r\n        this._timer = new InnerTimer();\r\n        this._lateTimer = new InnerTimer();\r\n        // @ts-ignore\r\n        global.__tgjsRegisterTickHandler(uts_timerUpdate);\r\n        // @ts-ignore\r\n        delete global.__tgjsRegisterTickHandler;\r\n    }\r\n}\r\n\r\n/**\r\n * cs侧来更新ts的timer\r\n */\r\nfunction uts_timerUpdate() {\r\n    Timer._timer._update();\r\n    Timer._lateTimer._update();\r\n}","let LanguageEvents = {\r\n    //多语言更新完成\r\n    ON_LANGUAGE_UPDATE_COMPLETE: \"ON_LANGUAGE_UPDATE_COMPLETE\",\r\n};\r\n\r\nexport {LanguageEvents};","import {ISingleton} from \"../../framework/interface/ISingleton\";\r\nimport {string} from \"../../framework/utils/StringUtil\";\r\nimport {UnityEngine} from \"csharp\";\r\nimport {Language} from \"./config/LanguageConfig\";\r\nimport {ResourceManager} from \"../../framework/resource/ResourceManager\";\r\nimport {$typeof} from \"puerts\";\r\nimport EventDispatcher from \"../../framework/utils/EventDispatcher\";\r\nimport {LanguageEvents} from \"./LanguageEvents\";\r\nimport {util} from \"protobufjs\";\r\nimport key2Re = util.key2Re;\r\n\r\n/**\r\n * 多语言组件\r\n */\r\nexport class LanguageManager extends EventDispatcher implements ISingleton {\r\n    public static Instance: LanguageManager = new LanguageManager();\r\n    /**\r\n     * 当前多语言map\r\n     */\r\n    private _contentMap: Map<string, string>;\r\n    /**\r\n     * 语言配置\r\n     */\r\n    private _languageConfig: Language;\r\n    /**\r\n     * 更新中\r\n     */\r\n    private _updating: boolean;\r\n\r\n    initialize(): void {\r\n        this._contentMap = new Map<string, string>();\r\n        this._updating = false;\r\n        this._languageConfig = null;\r\n    }\r\n\r\n    /**\r\n     * 通过配置档字段获取字符串\r\n     * @param key\r\n     */\r\n    public getStringByConfig(key: string): string {\r\n        let newKey = `AllConfLanguage_mKeyValue_${key}`;\r\n        return this.getStringByFullKey(newKey);\r\n    }\r\n\r\n    /**\r\n     * 通过自定义id获取字符串\r\n     * @param key\r\n     */\r\n    public getStringByShowID(key: string): string {\r\n        let newKey: string = `ShowMessage_mMessage_${key}`;\r\n        return this.getStringByFullKey(newKey);\r\n    }\r\n\r\n    /**\r\n     * 通过全量key获取字符串\r\n     * @param key\r\n     */\r\n    public getStringByFullKey(key: string): string {\r\n        let value: string = this._contentMap.get(key);\r\n        if (string.IsNullOrEmpty(value)) {\r\n            console.error(`LanguageManager::获取字符串错误,key->${key}`);\r\n            return string.empty;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 协程更新\r\n     * @param config\r\n     */\r\n    public async updateAwait(config: Language) {\r\n        this._updating = true;\r\n        this._languageConfig = config;\r\n        let path: string = `config/language/AllLanguage${config.fileSuffix}.csv`;\r\n        let asset: UnityEngine.TextAsset = await ResourceManager.Instance.loadAssetAwait(path, $typeof(UnityEngine.TextAsset)) as UnityEngine.TextAsset;\r\n        this._parseCSV(asset);\r\n        this._updating = false;\r\n        this.event(LanguageEvents.ON_LANGUAGE_UPDATE_COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * 解析字符串\r\n     * @param asset\r\n     * @private\r\n     */\r\n    private _parseCSV(asset: UnityEngine.TextAsset) {\r\n        if (asset == null) {\r\n            console.error(\"update language fail,text asset is null\");\r\n            return;\r\n        }\r\n        this._contentMap.clear();\r\n        let array = asset.text.split(\"\\n\\r\");\r\n        let len = array.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let kv = array[i].split(\"\\t\");\r\n            if (kv.length != 2) {\r\n                console.error(`language asset parse error,len not equal 2,kv:${array[i]}`);\r\n                continue;\r\n            }\r\n            this._contentMap.set(kv[0], kv[1]);\r\n        }\r\n    }\r\n}","import {BaseModule} from \"../../../framework/module/BaseModule\";\r\n/**\r\n * 主界面模块\r\n * @author by passion \r\n * @create time 2021/6/9 12:05\r\n**/\r\nexport class HomeModule extends BaseModule{\r\n    \r\n}","import {UIWindowNames} from \"../../../framework/ui/config/UIWindowNames\";\r\nimport {BaseScene} from \"../../../framework/scene/base/BaseScene\";\r\nimport {HomeScene} from \"../home/HomeScene\";\r\n\r\n/**\r\n * 场景配置\r\n */\r\nexport class SceneConfig {\r\n    Level: number;\r\n    Name: string;\r\n    Class: IBaseSceneCtor;\r\n    Loading: UIWindowNames;\r\n}\r\n\r\n/**\r\n * 构造函数配置接口\r\n */\r\ninterface IBaseSceneCtor {\r\n    new(sceneConfig: SceneConfig): BaseScene;\r\n}\r\n\r\n/**\r\n * 启动场景\r\n */\r\nlet launch: SceneConfig = {\r\n    Level: 0,\r\n    Name: \"LaunchScene\",\r\n    Class: null,\r\n    Loading: UIWindowNames.UILoading,\r\n};\r\n\r\n/**\r\n * 加载场景\r\n */\r\nlet loading: SceneConfig = {\r\n    Level: 1,\r\n    Name: \"LoadingScene\",\r\n    Class: null,\r\n    Loading: UIWindowNames.UILoading,\r\n};\r\n\r\n/**\r\n * 加载场景\r\n */\r\n let login: SceneConfig = {\r\n    Level: 1,\r\n    Name: \"LoginScene\",\r\n    Class: null,\r\n    Loading: UIWindowNames.UILoading,\r\n};\r\n\r\n/**\r\n * 主界场景\r\n */\r\nlet home: SceneConfig = {\r\n    Level: 2,\r\n    Name: \"HomeScene\",\r\n    Class: HomeScene,\r\n    Loading: UIWindowNames.UILoading,\r\n};\r\n\r\n/**\r\n * 战斗场景\r\n */\r\nlet battle: SceneConfig = {\r\n    Level: 3,\r\n    Name: \"BattleScene\",\r\n    Class: null,\r\n    Loading: UIWindowNames.UILoading,\r\n};\r\n\r\nlet SceneConfigs = {\r\n    //加载场景 通用\r\n    LoadingScene: loading,\r\n    LaunchScene: launch,\r\n    HomeScene: home,\r\n    BattleScene: battle,\r\n};\r\n\r\nexport {\r\n    SceneConfigs\r\n}","import {BaseScene} from \"../../../framework/scene/base/BaseScene\";\r\nimport {ModuleCenter} from \"../../../framework/module/ModuleCenter\";\r\nimport {HomeModule} from \"../../module/home/HomeModule\";\r\n\r\n/**\r\n * 主界面场景\r\n * @author by passion\r\n * @create time 2021/6/9 12:00\r\n **/\r\nexport class HomeScene extends BaseScene {\r\n\r\n    OnEnter() {\r\n        super.OnEnter();\r\n        ModuleCenter.Instance.add(HomeModule);\r\n    }\r\n\r\n    OnLeave() {\r\n        ModuleCenter.Instance.remove(HomeModule);\r\n        super.OnLeave();\r\n    }\r\n}","import {UIConfigInfo} from \"../../../framework/ui/config/UIConfigs\";\r\nimport {UIWindowNames} from \"../../../framework/ui/config/UIWindowNames\";\r\nimport {EUILayer} from \"../../../framework/ui/config/UILayers\";\r\nimport {EUIType} from \"../../../framework/ui/config/EUIType\";\r\nimport {UIBattleModel} from \"./uiBattle/UIBattleModel\";\r\nimport {UIBattleCtrl} from \"./uiBattle/UIBattleCtrl\";\r\nimport {UIBattleView} from \"./uiBattle/UIBattleView\";\r\n\r\n/**\r\n * battle场景ui配置\r\n * @author by passion \r\n * @create time 2021/6/9 14:06\r\n**/\r\n\r\nlet UIBattleMain: UIConfigInfo = {\r\n    name: UIWindowNames.UIBattleMain,\r\n    layer: EUILayer.NormalLayer,\r\n    model: UIBattleModel,\r\n    ctrl: UIBattleCtrl,\r\n    view: UIBattleView,\r\n    prefabPath: \"\",\r\n    components: [],\r\n    type: EUIType.View,\r\n};\r\n\r\n/**\r\n * 配置导出\r\n */\r\nlet UIBattleConfig = {\r\n    UIBattleMain:UIBattleMain\r\n};\r\n\r\nexport {\r\n    UIBattleConfig\r\n};","import UIBaseCtrl from \"../../../../framework/ui/base/UIBaseCtrl\";\r\n\r\nexport class UIBattleCtrl extends UIBaseCtrl{\r\n    onCreate(): void {\r\n        super.onCreate();\r\n    }\r\n    \r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}","import UIBaseModel from \"../../../../framework/ui/base/UIBaseModel\";\r\n\r\nexport class UIBattleModel extends UIBaseModel {\r\n    onCreate() {\r\n        super.onCreate();\r\n    }\r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}","import {UIBaseView} from \"../../../../framework/ui/base/UIBaseView\";\r\n\r\nexport class UIBattleView extends  UIBaseView{\r\n    onCreate(): void {\r\n        super.onCreate();\r\n    }\r\n    \r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}","import {UIWindowNames} from \"../../../framework/ui/config/UIWindowNames\";\r\nimport {EUILayer} from \"../../../framework/ui/config/UILayers\";\r\nimport {EUIType} from \"../../../framework/ui/config/EUIType\";\r\nimport {UIConfigInfo} from \"../../../framework/ui/config/UIConfigs\";\r\nimport {UIHomeCtrl} from \"./uiHome/UIHomeCtrl\";\r\nimport {UIHomeView} from \"./uiHome/UIHomeView\";\r\nimport {UIHomeModel} from \"./uiHome/UIHomeModel\";\r\n\r\n/**\r\n * home场景界面配置\r\n * @author by passion \r\n * @create time 2021/6/9 14:06\r\n**/\r\n\r\n/**\r\n * 这里定义所有Home场景中使用的UI配置，\r\n */\r\n\r\nlet UIHome: UIConfigInfo = {\r\n    name: UIWindowNames.UIHome,\r\n    layer: EUILayer.NormalLayer,\r\n    model: UIHomeModel,\r\n    ctrl: UIHomeCtrl,\r\n    view: UIHomeView,\r\n    prefabPath: \"\",\r\n    components: [],\r\n    type: EUIType.View,\r\n};\r\n\r\n/**\r\n * 配置导出\r\n */\r\nlet UIHomeConfig = {\r\n    UIHome:UIHome\r\n};\r\n\r\nexport {\r\n    UIHomeConfig\r\n};","import UIBaseCtrl from \"../../../../framework/ui/base/UIBaseCtrl\";\r\n\r\n/**\r\n * 测试主场景界面\r\n */\r\nexport class UIHomeCtrl extends UIBaseCtrl {\r\n    \r\n    onCreate(): void {\r\n        super.onCreate();\r\n    }\r\n    \r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}","import UIBaseModel from \"../../../../framework/ui/base/UIBaseModel\";\r\n\r\nexport class UIHomeModel extends UIBaseModel {\r\n    onCreate() {\r\n        super.onCreate();\r\n    }\r\n\r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}","import {UIBaseView} from \"../../../../framework/ui/base/UIBaseView\";\r\n\r\nexport class UIHomeView extends UIBaseView {\r\n    onCreate(): void {\r\n        super.onCreate();\r\n    }\r\n    \r\n    onDestroy(): void {\r\n        super.onDestroy();\r\n    }\r\n}","import {UIConfigInfo} from \"../../../framework/ui/config/UIConfigs\";\r\nimport {UIWindowNames} from \"../../../framework/ui/config/UIWindowNames\";\r\nimport {EUILayer} from \"../../../framework/ui/config/UILayers\";\r\nimport {UILoadingModel} from \"./uiLoading/UILoadingModel\";\r\nimport {UILoadingCtrl} from \"./uiLoading/UILoadingCtrl\";\r\nimport {UILoadingView} from \"./uiLoading/UILoadingView\";\r\nimport {EUIType} from \"../../../framework/ui/config/EUIType\";\r\n\r\n/**\r\n * loading场景ui配置\r\n * @author by passion\r\n * @create time 2021/6/9 14:07\r\n **/\r\n\r\n/**\r\n * 通用加载界面\r\n */\r\nlet UILoading: UIConfigInfo = {\r\n    name: UIWindowNames.UILoading,\r\n    layer: EUILayer.TopLayer,\r\n    model: UILoadingModel,\r\n    ctrl: UILoadingCtrl,\r\n    view: UILoadingView,\r\n    prefabPath: \"ui/prefabs/view/loading/ui_loading.prefab\",\r\n    components: [],\r\n    type: EUIType.View\r\n};\r\n\r\n/**\r\n * 配置导出\r\n */\r\nlet UILoadingConfig = {\r\n    UILoading: UILoading\r\n};\r\n\r\nexport {UILoadingConfig}","import UIBaseCtrl from \"../../../../framework/ui/base/UIBaseCtrl\";\r\n\r\n/**\r\n * 通用loading控制器\r\n */\r\nexport class UILoadingCtrl extends UIBaseCtrl {\r\n\r\n}","import UIBaseModel from \"../../../../framework/ui/base/UIBaseModel\";\r\nimport {IUILoadingModel} from \"../IUILoading\";\r\n\r\n/**\r\n * 通用loading数据\r\n */\r\nexport class UILoadingModel extends UIBaseModel implements IUILoadingModel{\r\n    /**\r\n     * 进度值\r\n     */\r\n    _value:number = 0;\r\n    \r\n    onEnable(...args): void {\r\n        super.onEnable(...args);\r\n        this._value = 0;\r\n    }\r\n    \r\n    onDisable(): void {\r\n        super.onDisable();\r\n        this._value = 0;\r\n    }\r\n    \r\n    public getValue(): number {\r\n        return this._value;\r\n    }\r\n    \r\n    public setValue(val: number): void {\r\n        if(val > 1 || val < 0){\r\n            return;\r\n        }\r\n        this._value = val;\r\n    }\r\n}","import {UIBaseView} from \"../../../../framework/ui/base/UIBaseView\";\r\nimport {UIText} from \"../../../../framework/ui/component/UIText\";\r\nimport {UIImage} from \"../../../../framework/ui/component/UIImage\";\r\nimport {Timer} from \"../../../../framework/utils/timer/Timer\";\r\nimport {UILoadingModel} from \"./UILoadingModel\";\r\n\r\n/**\r\n * 通用loading界面\r\n */\r\nexport class UILoadingView extends UIBaseView {\r\n    //加载文本\r\n    private _txtLoading: UIText;\r\n    //加载进度条\r\n    private _imgProgress: UIImage;\r\n\r\n    onCreate(): void {\r\n        super.onCreate();\r\n        this._txtLoading = this.addComponent(UIText, \"content/m_desc\") as UIText;\r\n        this._imgProgress = this.addComponent(UIImage, \"content/progress_cur\");\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this._txtLoading = null;\r\n        this._imgProgress = null;\r\n        super.onDestroy();\r\n    }\r\n\r\n    onEnable(...arg): void {\r\n        super.onEnable(...arg);\r\n        this._updateProgress();\r\n        Timer.timer.frameLoop(1, this, this._updateProgress);\r\n    }\r\n    \r\n    onDisable(): void {\r\n        Timer.timer.clearAll(this);\r\n        super.onDisable();\r\n    }\r\n\r\n    _updateProgress() {\r\n        let cur = (this.model as UILoadingModel)._value;\r\n        this._imgProgress.setFillAmount(cur);\r\n        this._txtLoading.text = `加载中 ${Math.round(cur * 100)}%`;\r\n    }\r\n}","module.exports = require(\"csharp\");","module.exports = require(\"puerts\");"],"sourceRoot":""}